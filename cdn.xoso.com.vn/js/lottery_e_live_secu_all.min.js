function getSearchParams(n) {
    var t = {};
    return location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(n, i, r) {
        t[i] = r
    }), n ? t[n] : t
}

function dcn() {
    disconnect()
}

function onConnect() {
    var n, t;
    log && console.log("Client Connected");
    connected = !0;
    connecting = !1;
    wssFailCount = 0;
    n = getSearchParams("tp");
    "undefined" == typeof n && (n = Math.floor(50 * Math.random()));
    t = "$client/xosocomvn" + (0 == n ? "" : "_" + n);
    subscribe(t, 0, function(n) {
        n || (connected = !1)
    })
}

function onFail(n) {
    log && (console.log("Failed to connect"), console.log("Failed to connect: " + n.errorMessage));
    connected = !1;
    connecting = !1;
    wssFailCount++
}

function onConnectionLost(n) {
    0 !== n.errorCode && log && console.log("Connection Lost: " + n.errorMessage);
    connected = !1;
    connecting = !1;
    wssFailCount++
}

function onMessageArrived(n) {
    if (e_live_err_flag = !1, lasttime_receive = new Date, log && (console.log("========" + (new Date).toLocaleString() + "========"), console.log("Message Recieved -> Topic: ", n.destinationName), console.log("Message Recieved -> QoS: ", n.qos), console.log("Message Recieved -> Payload: ", n.payloadString)), n.payloadString.indexOf("dieout") >= 0) {
        log && console.log(n.payloadString);
        return
    }
    var t = myJSONParse(n.payloadString);
    typeof t != "undefined" && t != null && typeof t.lottery_data != "undefined" && t.lottery_data != null && t.lottery_data.length > 0 && MQTTLiveXS(t)
}

function onWSMessageArrived(n) {
    log != null && log == !0 && console.log(n);
    var t = myJSONParse(n);
    MQTTLiveXS(t)
}

function connectionToggle() {
    connected ? disconnect() : connect()
}

function connect() {
    var u = liveServerIp,
        f = 8084,
        i = "xoso-" + newGuid(),
        e = "",
        o = "",
        s = "",
        h = "",
        n = "",
        c = "",
        r, v, t;
    let l = new Date,
        y = l.getUTCHours(),
        a = l.getUTCMinutes();
    if (log && console.log(y, isUsingWk), r = !0, typeof isResultLive != "undefined" && (r = isResultLive), isUsingWk) {
        if (isFN) {
            log && console.log("livewk isFinisDisconnect", isFN);
            return
        }
        if (!r && a > 30) {
            log && console.log("result complete", r, a);
            finisDisconnect();
            return
        }
        retryonerror > 3 && finisSocket();
        connecting = !0;
        countNDT = 0;
        countNMS = 0;
        try {
            socket = new WebSocket(livewklink);
            retryonerror++
        } catch (p) {
            $.ajax({
                type: "GET",
                url: "https://log.xoso.com.vn/exconnect"
            });
            console.log("new WebSocket ", p);
            isUsingWk = !1;
            connecting = !1
        }
        socket.onopen = function() {
            console.log("socket connected!");
            connected = !0;
            connecting = !1;
            retryonerror = 0
        };
        socket.onerror = function() {
            console.log("socket connect error");
            $.ajax({
                type: "GET",
                url: "https://log.xoso.com.vn/onerror"
            });
            connected = !1;
            connecting = !1
        };
        socket.onmessage = function(n) {
            if (countNMS = 0, isfmr = !1, isFN && (console.log("socket close isFinisDisconnect"), socket && socket.close()), n.data == "0") {
                console.log("message", "ping");
                return
            }
            if (n.data == "1") {
                console.log("message", "switch");
                finisSocket();
                return
            }
            countNDT = 0;
            typeof isResultLive != "undefined" && (isResultLive = !0);
            onWSMessageArrived(n.data)
        };
        socket.onclose = function() {
            connected = !1;
            connecting = !1;
            console.log("socket disconnected success")
        };
        return
    }
    "" != self.window.name && isGuid(self.window.name) ? c = self.window.name : (self.window.name = newGuid(), c = self.window.name);
    v = "";
    v = navigator.sayswho;
    client = e.length > 0 ? new Paho.MQTT.Client(u, Number(f), e, i) : new Paho.MQTT.Client(u, Number(f), i);
    log && console.info("Connecting to Server: Path: ", client.path, ". Client ID: ", i);
    client.onConnectionLost = onConnectionLost;
    client.onMessageArrived = onMessageArrived;
    t = {
        invocationContext: {
            host: u,
            port: f,
            path: client.path,
            clientId: i
        },
        timeout: 30,
        keepAliveInterval: 10,
        cleanSession: !0,
        useSSL: !0,
        onSuccess: onConnect,
        onFailure: onFail
    };
    (o.length > 0 && (t.userName = o), s.length > 0 && (t.password = s), h.length > 0) && (n = new Paho.MQTT.Message(n), n.destinationName = h, n.qos = 0, n.retained = !1, t.willMessage = n);
    client.connect(t);
    log && console.log("Connecting...");
    connecting = !0
}

function disconnect() {
    client != null && (log && console.info("Disconnecting from Server"), client.disconnect(), log && console.log("Connection - Disconnected."), connected = !1)
}

function finisDisconnect() {
    isFN = !0;
    client != null && (log && console.info("Finis Disconnecting from Server"), client.disconnect(), log && console.log("Connection - Disconnected."));
    typeof socket != "undefined" && socket != null && socket.readyState == WebSocket.OPEN && (socket.send("0"), log && console.info("(Finish) Disconnecting to Websocket Server"), log && console.log("Websocket - Disconnected."))
}

function finisSocket() {
    isfinisSocket = !0;
    isUsingWk = !1;
    connected = !1;
    connecting = !1;
    isfmr = !0;
    isFN = !0;
    typeof socket != "undefined" && socket != null && socket.readyState == WebSocket.OPEN && (socket.send("0"), log && console.info("(Finish) Disconnecting to Websocket Server"), log && console.log("Websocket - Disconnected."))
}

function retrySocket() {
    retry++;
    retry > maxretry && ($.ajax({
        type: "GET",
        url: "https://log.xoso.com.vn/retrymax"
    }), finisSocket());
    typeof socket != "undefined" && socket != null && socket.readyState == WebSocket.OPEN && (socket.send("0"), log && console.info("(Retry) Disconnecting to Websocket Server"));
    connected = !1;
    connecting = !1;
    isfmr = !0;
    countNDT = 0;
    countNMS = 0;
    connect()
}

function publish(n, t, i, r) {
    log && (console.log("========" + (new Date).toLocaleString() + "========"), console.info("Publishing Message: Topic: ", n, ". QoS: " + t + ". Message: ", i));
    i = new Paho.MQTT.Message(i);
    i.destinationName = n;
    i.qos = Number(t);
    i.retained = r;
    client.send(i)
}

function sendLotteryLiveMessage(n) {
    for (var i, r = JSON.stringify(n), t = 0; 10 > t; t++) i = "$client/xosocomvn" + (0 == t ? "" : "_" + t), publish(i, 0, r, !0)
}

function subscribe(n, t, i) {
    log && console.info("Subscribing to: Topic: ", n, ". QoS: ", t);
    client.subscribe(n, {
        qos: Number(t),
        onSuccess: function() {
            log && console.info("Subscribed to: Topic: ", n, ". QoS: ", t);
            "function" == typeof i && i(!0)
        },
        onFailure: function() {
            connected = !1;
            log && console.info("Subscribe failed to: Topic: ", n, ". QoS: ", t);
            "function" == typeof i && i(!1)
        }
    })
}

function unsubscribe(n) {
    log && console.info("Unsubscribing from ", n);
    client.unsubscribe(n, {
        onSuccess: unsubscribeSuccess,
        onFailure: unsubscribeFailure,
        invocationContext: {
            topic: n
        }
    })
}

function unsubscribeSuccess(n) {
    log && console.info("Successfully unsubscribed from ", n.invocationContext.topic)
}

function unsubscribeFailure(n) {
    log && console.info("Failed to  unsubscribe from ", n.invocationContext.topic)
}

function safe_tags_regex(n) {
    return n.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
}

function newGuid() {
    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(n) {
        var t = 16 * Math.random() | 0,
            i = "x" == n ? t : 3 & t | 8;
        return i.toString(16)
    })
}

function isGuid(n) {
    var t = /[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}/i.exec(n);
    return null != t
}

function myconn() {
    if (isFN) {
        log && console.log("myconn is finish", isFN);
        return
    }
    var n = new Date,
        t = n.getHours(),
        i = n.getMinutes();
    (16 == t || 17 == t || 18 == t) && i >= 10 && (connected || connecting ? connecting && log && console.log("Connecting...") : (log && console.log("ReConnecting..."), connect()), null != lasttime_receive) && (n.getTime() - lasttime_receive.getTime()) / 1e3
}

function LiveMBV2(n, t) {
    var i;
    headingTag = t;
    var u = new Date,
        f = u.getHours(),
        r = u.getMinutes();
    if (isFN) {
        log && console.log("myconn isFinisDisconnect", isFN);
        return
    }
    if (typeof isResultLive != "undefined" && !isResultLive && r > 40) {
        log && console.log("result complete", isResultLive, r);
        finisDisconnect();
        return
    }
    if (l_root = rootList.split(";"), (6 == f || 18 == f) && r >= 10 && 40 >= r) {
        if (is_first_nodejs || "undefined" != typeof connected && "undefined" != typeof e_live_err_flag && connected && !e_live_err_flag) return is_first_nodejs = !1, console.log("elive is running..."), void(1 == lottery_json.length && getMBHTMLV2(lottery_json));
        try {
            isNoteJs(root) ? (i = root + "1/" + getTime15s(), console.log("live link: " + i), start_time = (new Date).getTime(), $.ajax({
                type: "GET",
                url: i,
                timeout: 5e3,
                success: function(n, t, r) {
                    var s, u;
                    if (request_time = (new Date).getTime() - start_time, console.log(request_time), (null == n || JSON.stringify(n).length <= 50) && rootList.indexOf(";") >= 0) return console.log("data from " + i + ": Empty"), sucLiveUrlIndex < l_root.length - 1 ? sucLiveUrlIndex++ : sucLiveUrlIndex = 0, void(root = l_root[sucLiveUrlIndex]);
                    if (s = new Date(r.getResponseHeader("last-modified")), u = (svdate - s) / 1e3, u > 60 || u < -60) {
                        svdate = srvTime();
                        console.log("difsec: ", u);
                        return
                    }
                    var f = new Date,
                        e = f.getDate(),
                        o = f.getMonth() + 1,
                        c = f.getFullYear(),
                        l = "kqngay_" + (10 > e ? "0" + e : "" + e) + (10 > o ? "0" + o : "" + o) + c,
                        h = document.getElementById(l);
                    h && (getMBHTMLV2(n), h.style.display = "block");
                    request_time > warringTime && (console.log("data from " + root + ": Warring speed"), sucLiveUrlIndex < l_root.length - 1 ? sucLiveUrlIndex++ : sucLiveUrlIndex = 0, root = l_root[sucLiveUrlIndex])
                },
                error: function() {
                    console.log("data from " + i + ": Error");
                    sucLiveUrlIndex < l_root.length - 1 ? sucLiveUrlIndex++ : sucLiveUrlIndex = 0;
                    root = l_root[sucLiveUrlIndex]
                }
            })) : (i = root + "lottery_ws/LotteryWCFService.svc/GetLotteryMsgLiveByGroup/1,1,21,1,4," + n + ",1", console.log("live link: " + i), start_time = (new Date).getTime(), $.ajax({
                type: "GET",
                url: i,
                data: "",
                dataType: "text",
                timeout: 5e3,
                beforeSend: LiveMBBegin,
                success: LiveMBSuccessV2,
                error: LiveMBError
            }))
        } catch (e) {
            console.log(e)
        }
    }
}

function LiveMBBegin() {}

function LiveMBError() {
    console.log("data from " + root + ": Error");
    sucLiveUrlIndex < l_root.length - 1 ? sucLiveUrlIndex++ : sucLiveUrlIndex = 0;
    root = l_root[sucLiveUrlIndex]
}

function LiveMBSuccessV2(n) {
    var f;
    try {
        if (request_time = (new Date).getTime() - start_time, console.log(request_time), null == n || n.length <= 50) return console.log("data from " + root + ": Empty"), sucLiveUrlIndex < l_root.length - 1 ? sucLiveUrlIndex++ : sucLiveUrlIndex = 0, void(root = l_root[sucLiveUrlIndex]);
        var e = JSON.parse(n),
            t = new Date,
            i = t.getDate(),
            r = t.getMonth() + 1,
            o = t.getFullYear(),
            s = "kqngay_" + (10 > i ? "0" + i : "" + i) + (10 > r ? "0" + r : "" + r) + o,
            u = document.getElementById(s);
        u && (f = getMBHTMLV2(e), $("#kqLiveTitle").html(f), u.style.display = "block");
        request_time > warringTime && (console.log("data from " + root + ": Warring speed"), sucLiveUrlIndex < l_root.length - 1 ? sucLiveUrlIndex++ : sucLiveUrlIndex = 0, root = l_root[sucLiveUrlIndex])
    } catch (h) {
        console.log(h)
    }
}

function getMBHTMLV2(n) {
    var o, r, w, h, s, a, u, f, b, l, c, t, i, e;
    if (typeof n != "undefined" && n != null && !(n.length <= 0)) {
        o = "";
        resultupdating = !0;
        newResult = !1;
        startDB = !1;
        ("undefined" == typeof document.getElementById("mb_prizeDB_item0") || null == document.getElementById("mb_prizeDB_item0")) && initMBHTMLV2();
        try {
            for (r = n[0], 1 == parseInt(r.Status) ? o += '<span>XSMB  <span style="color:#b01014">Đã quay thưởng xong<\/span><\/span>' : 2 == parseInt(r.Status) ? o += '<span>XSMB bắt đầu mở thưởng lúc <span style="color:#b01014">' + r.OpenPrizeTime + "<\/span><\/span><\/div>" : (o += '<span><img class="icon-long-quay" src="https://cdn.xoso.com.vn/images/dangchoxoso.gif" alt="xstt"> XSMB ' + r.LotteryName.replace("Miền Bắc", "") + ' <span style = "color:#b01014">Đang quay thưởng<\/span><\/span>', isLive = !0, curentPrice = 0, curentPriceIndex = 0), $("#kqLiveTitle").html() != o && $("#kqLiveTitle").html(o), w = '<a tite="XSMB" href="/xo-so-mien-bac/xsmb-p1.html">XSMB<\/a> ' + getLinkDayOfWeekMb() + getLinkDayMb() + r.LotteryName.replace("Miền Bắc ", ""), h = '<img class="icon-long-quay" src="https://cdn.xoso.com.vn/images/long-quay.gif" alt="truc tiep mien bac">', $("#kqLiveLink").html(w), s = 0; s < r.LotPrizes.length; s++)
                for (a = r.LotPrizes[s].Prize.toLowerCase(), u = "", u = a.indexOf("db") >= 0 || a.indexOf("đb") >= 0 || a.indexOf("đặc biệt") >= 0 ? "DB" : "" + s, f = r.LotPrizes[s].Range.split(" - "), t = 0; t < f.length; t++)(f[t] = f[t].trim(), f[t].indexOf("...") < 0 && (curentPrice = s, curentPriceIndex = t), "DB" == u) ? $("#mb_prize" + u + "_item" + t).html() != f[t] && (f[t].indexOf("...") < 0 ? ($("#mb_prize" + u + "_item" + t).html(f[t].trim()), newResult = !0, intervalVariable && window.clearInterval(intervalVariable)) : ($("#mb_prize" + u + "_item" + t).html().indexOf("runloto") < 0 || 0 != curentPrice) && $("#mb_prize" + u + "_item" + t).html().indexOf(h) < 0 && $("#mb_prize" + u + "_item" + t).html(f[t].trim().replace("...", h))) : ($("#mb_prize" + u + "_item" + t).html() != f[t].trim() || "..." == f[t].trim()) && (f[t].indexOf("...") < 0 ? (b = $("#mb_prize" + u + "_item" + t).html().indexOf("ketquamoi") + 0, b >= 0 || !isLive ? $("#mb_prize" + u + "_item" + t).html(f[t].trim()) : ($("#mb_prize" + u + "_item" + t).html("<span class='ketquamoi'>" + f[t].trim() + "<\/span>"), newResult = !0)) : $("#mb_prize" + u + "_item" + t).html().indexOf("runloto") < 0 && $("#mb_prize" + u + "_item" + t).html().indexOf(h) < 0 && $("#mb_prize" + u + "_item" + t).html(h));
            if ("" == r.SpecialCodes && (r.SpecialCodes = "... - ... - ..."), $("#mb_prizeCode").length > 0) {
                for (l = "", c = r.SpecialCodes.split(" - "), t = 0; t < c.length; t++) c[t].indexOf("...") < 0 ? (l += '<span class="code-DB' + c.length + '">' + c[t].trim() + "<\/span>", 2 == t && (startDB = !0)) : l += '<span class="code-DB' + c.length + '">' + h + "<\/span>";
                $("#mb_prizeCode").html() != l && $("#mb_prizeCode").html(l)
            }
            for (i = "", i += getLinkTableLotoMb(), i += '<table class="table-loto">', i += "    <thead>", i += "<tr>", i += '<th class="loto-name">Đầu<\/th>', i += '<th class="loto-col2">Đuôi<\/th>', i += '<th class="loto-col2">Đầu<\/th>', i += '<th class="loto-name">Đuôi<\/th>', i += "<\/tr>", i += "<\/thead>", i += "<tbody>", e = 0; 10 > e; e++) i += e % 2 == 0 ? "<tr>" : "<tr>", i += "<th>" + e.toString() + "<\/th>", i += "<td>" + r.Lotos[e].Tail + "<\/td>", i += "            <td>" + r.LotoTailTable[e].Head + "<\/td>", i += "            <th>" + e.toString() + "<\/th>", i += "        <\/tr>";
            i += "<\/tbody><\/table>";
            var v = new Date,
                y = v.getDate(),
                p = v.getMonth() + 1,
                k = v.getFullYear(),
                d = "kqngay_" + (10 > y ? "0" + y : "" + y) + (10 > p ? "0" + p : "" + p) + k + "_dd";
            $("#" + d).html(i);
            1 == parseInt(r.Status) && interval && window.clearInterval(interval);
            1 == parseInt(r.Status) && intervalVariable && window.clearInterval(intervalVariable);
            0 == parseInt(r.Status) ? intervalVariable || (intervalVariable = setInterval("getRandomTextMB()", 100)) : intervalVariable && window.clearInterval(intervalVariable);
            1 == parseInt(r.Status) && finisDisconnect();
            try {
                lottery_json = n;
                getLiveLotoEvent()
            } catch (g) {
                console.log("errliveloto", g)
            }
        } catch (nt) {
            resultupdating = !1;
            console.log(nt)
        }
        return newResult && newPrizeSound(), 6 >= curentPrice && (curentCountDB = 0), 7 == curentPrice && curentCountDB++, (curentCountDB > 5 || (new Date).getMinutes() >= 28) && (startDB = !0), resultupdating = !1, o
    }
}

function getLinkTableLotoMb() {
    var n = '<div class="site-link2"><a title="Bảng Loto Miền Bắc" href="/lo-to-mien-bac/ket-qua-lo-to-mien-bac-p1.html">Bảng Loto Miền Bắc<\/a>';
    switch ((new Date).getDay()) {
        case 0:
            n += '<a title="Loto miền Bắc Chủ nhật" href="/lo-to-mien-bac-chu-nhat.html">Loto miền Bắc Chủ nhật<\/a>';
            break;
        case 1:
            n += '<a title="Loto miền Bắc Thứ 2" href="/lo-to-mien-bac-thu-2.html">Loto miền Bắc Thứ 2<\/a>';
            break;
        case 2:
            n += '<a title="Loto miền Bắc Thứ 3" href="/lo-to-mien-bac-thu-3.html">Loto miền Bắc Thứ 3<\/a>';
            break;
        case 3:
            n += '<a title="Loto miền Bắc Thứ 4" href="/lo-to-mien-bac-thu-4.html">Loto miền Bắc Thứ 4<\/a>';
            break;
        case 4:
            n += '<a title="Loto miền Bắc Thứ 5" href="/lo-to-mien-bac-thu-5.html">Loto miền Bắc Thứ 5<\/a>';
            break;
        case 5:
            n += '<a title="Loto miền Bắc Thứ 6" href="/lo-to-mien-bac-thu-6.html">Loto miền Bắc Thứ 6<\/a>';
            break;
        case 6:
            n += '<a title="Loto miền Bắc Thứ 7" href="/lo-to-mien-bac-thu-7.html">Loto miền Bắc Thứ 7<\/a>'
    }
    return n + "<\/div>"
}

function getLinkDayOfWeekMb() {
    var n = "";
    switch ((new Date).getDay()) {
        case 0:
            n += '<a title="XSMB Chủ nhật" href="/xsmb-chu-nhat-cn.html">XSMB Chủ nhật<\/a>';
            break;
        case 1:
            n += '<a title="XSMB Thứ 2" href="/xsmb-thu-2.html">XSMB Thứ 2<\/a>';
            break;
        case 2:
            n += '<a title="XSMB Thứ 3" href="/xsmb-thu-3.html">XSMB Thứ 3<\/a>';
            break;
        case 3:
            n += '<a title="XSMB Thứ 4" href="/xsmb-thu-4.html">XSMB Thứ 4<\/a>';
            break;
        case 4:
            n += '<a title="XSMB Thứ 5" href="/xsmb-thu-5.html">XSMB Thứ 5<\/a>';
            break;
        case 5:
            n += '<a title="XSMB Thứ 6" href="/xsmb-thu-6.html">XSMB Thứ 6<\/a>';
            break;
        case 6:
            n += '<a title="XSMB Thứ 7" href="/xsmb-thu-7.html">XSMB Thứ 7<\/a>'
    }
    return n
}

function getLinkDayMb() {
    var i = new Date,
        n = i.getDate(),
        t = i.getMonth() + 1,
        r = i.getFullYear(),
        u = "" + (10 > n ? "0" + n : "" + n) + "/" + (10 > t ? "0" + t : "" + t) + "/" + r,
        f = "" + (10 > n ? "0" + n : "" + n) + "-" + (10 > t ? "0" + t : "" + t) + "-" + r;
    return ' <a title="XSMB ' + u + '" href="/xsmb-' + f + '.html"> XSMB ' + u + "<\/a>"
}

function getLinkDayOfWeekTN(n) {
    var r = "",
        t, i;
    n == 2 ? (t = "XSMN", i = "xsmn") : (t = "XSMT", i = "xsmt");
    switch ((new Date).getDay()) {
        case 0:
            r += '<a title="' + t + ' Chủ nhật" href="/' + i + '-chu-nhat-cn.html">' + t + " Chủ nhật<\/a>";
            break;
        case 1:
            r += '<a title="' + t + ' Thứ 2" href="/' + i + '-thu-2.html">' + t + " Thứ 2<\/a>";
            break;
        case 2:
            r += '<a title="' + t + ' Thứ 3" href="/' + i + '-thu-3.html">' + t + " Thứ 3<\/a>";
            break;
        case 3:
            r += '<a title="' + t + ' Thứ 4" href="/' + i + '-thu-4.html">' + t + " Thứ 4<\/a>";
            break;
        case 4:
            r += '<a title="' + t + ' Thứ 5" href="/' + i + '-thu-5.html">' + t + " Thứ 5<\/a>";
            break;
        case 5:
            r += '<a title="' + t + ' Thứ 6" href="/' + i + '-thu-6.html">' + t + " Thứ 6<\/a>";
            break;
        case 6:
            r += '<a title="' + t + ' Thứ 7" href="/' + i + '-thu-7.html">' + t + " Thứ 7<\/a>"
    }
    return r
}

function getLinkDayTN(n) {
    var u = new Date,
        t = u.getDate(),
        i = u.getMonth() + 1,
        e = u.getFullYear(),
        o = "" + (10 > t ? "0" + t : "" + t) + "/" + (10 > i ? "0" + i : "" + i) + "/" + e,
        s = "" + (10 > t ? "0" + t : "" + t) + "-" + (10 > i ? "0" + i : "" + i) + "-" + e,
        r, f;
    return n == 2 ? (r = "XSMN", f = "xsmn") : (r = "XSMT", f = "xsmt"), ' <a title="' + r + " " + o + '" href="/' + f + "-" + s + '.html">' + r + " " + o + "<\/a>"
}

function getRandomTextMB() {
    if (!(curentPrice < 0) && !resultupdating && isLive) {
        var n = 5;
        curentPrice == 7 ? (n = 5, curentPriceIndex < 3 ? (n = 2, $("#mb_prize7_item" + (curentPriceIndex + 1)).html(getRandomString(n))) : startDB && (n = 5, $("#mb_prizeDB_item0").html(getRandomString(n)))) : curentPrice == 0 ? $("#mb_prize1_item0").html(getRandomString(n)) : curentPrice == 1 ? $("#mb_prize2_item0").html(getRandomString(n)) : curentPrice == 2 ? curentPriceIndex == 0 ? $("#mb_prize2_item1").html(getRandomString(n)) : $("#mb_prize3_item0").html(getRandomString(n)) : curentPrice == 3 ? curentPriceIndex < 5 ? (n = 5, $("#mb_prize3_item" + (curentPriceIndex + 1)).html(getRandomString(n))) : (n = 4, $("#mb_prize4_item0").html(getRandomString(n))) : curentPrice == 4 ? (n = 4, curentPriceIndex < 3 ? $("#mb_prize4_item" + (curentPriceIndex + 1)).html(getRandomString(n)) : $("#mb_prize5_item0").html(getRandomString(n))) : curentPrice == 5 ? (n = 4, curentPriceIndex < 5 ? $("#mb_prize5_item" + (curentPriceIndex + 1)).html(getRandomString(n)) : (n = 3, $("#mb_prize6_item0").html(getRandomString(n)))) : curentPrice == 6 && (n = 3, curentPriceIndex < 2 ? curentPriceIndex == 0 ? $("#mb_prize6_item1").html(getRandomString(n)) : $("#mb_prize6_item2").html(getRandomString(n)) : (n = 2, $("#mb_prize7_item0").html(getRandomString(n))))
    }
}

function getRandomTextMB() {
    if (!(0 > curentPrice || resultupdating) && isLive) {
        var n = 5;
        if (7 == curentPrice)
            if (n = 5, 3 > curentPriceIndex)
                for (n = 2, index = curentPriceIndex + 1; index < 4; index++) $("#mb_prize7_item" + index).html(getRandomString(n));
            else 3 == curentPriceIndex && (n = 5, $("#mb_prizeDB_item0").html(getRandomString(n))), $("#mb_prizeDB_item0").html(getRandomString(n));
        else 0 == curentPrice ? newResult || $("#mb_prize1_item0").html(getRandomString(n)) : 1 == curentPrice ? newResult || ($("#mb_prize2_item0").html(getRandomString(n)), $("#mb_prize2_item1").html(getRandomString(n))) : 2 == curentPrice ? 0 == curentPriceIndex ? $("#mb_prize2_item1").html(getRandomString(n)) : newResult || ($("#mb_prize3_item0").html(getRandomString(n)), $("#mb_prize3_item1").html(getRandomString(n))) : 3 == curentPrice ? 5 > curentPriceIndex ? (n = 5, curentPriceIndex % 2 == 1 ? newResult || ($("#mb_prize3_item" + (curentPriceIndex + 1)).html(getRandomString(n)), $("#mb_prize3_item" + (curentPriceIndex + 2)).html(getRandomString(n))) : $("#mb_prize3_item" + (curentPriceIndex + 1)).html(getRandomString(n))) : (n = 4, newResult || ($("#mb_prize4_item0").html(getRandomString(n)), $("#mb_prize4_item1").html(getRandomString(n)))) : 4 == curentPrice ? (n = 4, 3 > curentPriceIndex ? curentPriceIndex % 2 == 1 ? newResult || ($("#mb_prize4_item" + (curentPriceIndex + 1)).html(getRandomString(n)), $("#mb_prize4_item" + (curentPriceIndex + 2)).html(getRandomString(n))) : $("#mb_prize4_item" + (curentPriceIndex + 1)).html(getRandomString(n)) : newResult || ($("#mb_prize5_item0").html(getRandomString(n)), $("#mb_prize5_item1").html(getRandomString(n)))) : 5 == curentPrice ? (n = 4, 5 > curentPriceIndex ? curentPriceIndex % 2 == 1 ? newResult || ($("#mb_prize5_item" + (curentPriceIndex + 1)).html(getRandomString(n)), $("#mb_prize5_item" + (curentPriceIndex + 2)).html(getRandomString(n))) : $("#mb_prize5_item" + (curentPriceIndex + 1)).html(getRandomString(n)) : (n = 3, newResult || ($("#mb_prize6_item0").html(getRandomString(n)), $("#mb_prize6_item1").html(getRandomString(n)), $("#mb_prize6_item2").html(getRandomString(n))))) : 6 == curentPrice && (n = 3, 2 > curentPriceIndex ? 0 == curentPriceIndex ? ($("#mb_prize6_item1").html(getRandomString(n)), $("#mb_prize6_item2").html(getRandomString(n))) : $("#mb_prize6_item2").html(getRandomString(n)) : (n = 2, newResult || ($("#mb_prize7_item0").html(getRandomString(n)), $("#mb_prize7_item1").html(getRandomString(n)), $("#mb_prize7_item2").html(getRandomString(n)), $("#mb_prize7_item3").html(getRandomString(n)))))
    }
}

function getRandomTextProvince() {
    TNcurentPrice && !resultupdating && isLive && $(TNcurentPrice[0]).html(getRandomString(TNcurentPriceIndex[0]))
}

function getRandomTextTN() {
    if (TNcurentPrice && !resultupdating && isLive)
        for (index = 0; index < TNcurentPrice.length; index++) $(TNcurentPrice[index]).html(getRandomString(TNcurentPriceIndex[index]));
    else log && console.log(TNcurentPrice.length, resultupdating, isLive)
}

function newPrizeSound() {}

function getRandomString(n) {
    for (var r, i = "", u = Math.floor(Math.random() * 10), t = 0; t < n; t++) r = (u + t * 3) % 10, t == 0 && RandomNumber[t] == 0 && typeof RandomNumber[1] == "undefined" && (RandomNumber[t] = r - 1), typeof RandomNumber[t] == "undefined" ? (RandomNumber[t] = r, i += "<span class='runloto-" + RandomNumber[t] + "'>" + RandomNumber[t] + "<\/span>") : (RandomNumber[t] = RandomNumber[t] + 1, RandomNumber[t] > 9 && (RandomNumber[t] = 0), i += "<span class='runloto-" + RandomNumber[t] + "'>" + RandomNumber[t] + "<\/span>");
    return i
}

function LiveTNV2(n, t, i) {
    var r;
    group = n;
    headingTag = i;
    var e = new Date,
        f = e.getHours(),
        u = e.getMinutes();
    if (isFN) {
        log && console.log("myconn isFinisDisconnect", isFN);
        return
    }
    if (typeof isResultLive != "undefined" && !isResultLive && u > 40) {
        log && console.log("result complete", isResultLive, u);
        finisDisconnect();
        return
    }
    if (l_root = rootList.split(";"), (4 == f || 16 == f) && u >= 14 && 50 >= u && 2 == n || (5 == f || 17 == f) && u >= 14 && 50 >= u && 3 == n) {
        if (is_first_nodejs || "undefined" != typeof connected && "undefined" != typeof e_live_err_flag && connected && !e_live_err_flag) return is_first_nodejs = !1, console.log("elive is running..."), void(lottery_json.length > 1 && getTNHTMLV2(lottery_json));
        try {
            isNoteJs(root) ? (r = root + group + "/" + getTime15s(), console.log("live link: " + r), start_time = (new Date).getTime(), $.ajax({
                type: "GET",
                url: r,
                timeout: 5e3,
                success: function(n, t, i) {
                    var s, u;
                    if (request_time = (new Date).getTime() - start_time, console.log(request_time), (null == n || JSON.stringify(n).length <= 50) && rootList.indexOf(";") >= 0) return console.log("data from " + r + ": Empty"), sucLiveUrlIndex < l_root.length - 1 ? sucLiveUrlIndex++ : sucLiveUrlIndex = 0, void(root = l_root[sucLiveUrlIndex]);
                    if (s = new Date(i.getResponseHeader("last-modified")), u = (svdate - s) / 1e3, u > 60 || u < -60) {
                        svdate = srvTime();
                        console.log("difsec: ", u);
                        return
                    }
                    var f = new Date,
                        e = f.getDate(),
                        o = f.getMonth() + 1,
                        c = f.getFullYear(),
                        l = (2 == group ? "mn" : "mt") + "_kqngay_" + (10 > e ? "0" + e : "" + e) + (10 > o ? "0" + o : "" + o) + c,
                        h = document.getElementById(l);
                    h && (getTNHTMLV2(), h.style.display = "block");
                    request_time > warringTime && (console.log("data from " + root + ": Warring speed"), sucLiveUrlIndex < l_root.length - 1 ? sucLiveUrlIndex++ : sucLiveUrlIndex = 0, root = l_root[sucLiveUrlIndex])
                },
                error: function() {
                    console.log("data from " + r + ": Error");
                    sucLiveUrlIndex < l_root.length - 1 ? sucLiveUrlIndex++ : sucLiveUrlIndex = 0;
                    root = l_root[sucLiveUrlIndex]
                }
            })) : (r = root + "lottery_ws/LotteryWCFService.svc/GetLotteryMsgLiveByGroup/" + n + ",1,21,1,4," + t + ",1", console.log("live link: " + r), start_time = (new Date).getTime(), $.ajax({
                type: "GET",
                url: r,
                data: "",
                dataType: "text",
                timeout: 5e3,
                beforeSend: LiveTNBegin,
                success: LiveTNSuccessV2,
                error: LiveTNError
            }))
        } catch (o) {
            console.log(o)
        }
    }
}

function LiveTNBegin() {}

function LiveTNError() {
    console.log("data from " + root + ": Error");
    sucLiveUrlIndex < l_root.length - 1 ? sucLiveUrlIndex++ : sucLiveUrlIndex = 0;
    root = l_root[sucLiveUrlIndex]
}

function LiveTNSuccessV2(n) {
    try {
        if (request_time = (new Date).getTime() - start_time, console.log(request_time), null == n || n.length <= 50) return console.log("data from " + root + ": Empty"), sucLiveUrlIndex < l_root.length - 1 ? sucLiveUrlIndex++ : sucLiveUrlIndex = 0, void(root = l_root[sucLiveUrlIndex]);
        var f = JSON.parse(n),
            t = new Date,
            i = t.getDate(),
            r = t.getMonth() + 1,
            e = t.getFullYear(),
            o = (2 == group ? "mn" : "mt") + "_kqngay_" + (10 > i ? "0" + i : "" + i) + (10 > r ? "0" + r : "" + r) + e,
            u = document.getElementById(o);
        u && (getTNHTMLV2(f), u.style.display = "block");
        request_time > warringTime && (console.log("data from " + root + ": Warring speed"), sucLiveUrlIndex < l_root.length - 1 ? sucLiveUrlIndex++ : sucLiveUrlIndex = 0, root = l_root[sucLiveUrlIndex])
    } catch (s) {
        console.log(s)
    }
}

function srvTime() {
    try {
        xmlHttp = new XMLHttpRequest
    } catch (n) {
        try {
            xmlHttp = new ActiveXObject("Msxml2.XMLHTTP")
        } catch (t) {
            try {
                xmlHttp = new ActiveXObject("Microsoft.XMLHTTP")
            } catch (i) {
                alert("AJAX not supported")
            }
        }
    }
    return xmlHttp.open("HEAD", window.location.href.toString(), !1), xmlHttp.setRequestHeader("Content-Type", "text/html"), xmlHttp.send(""), xmlHttp.getResponseHeader("Date")
}

function updatesvdate() {
    svdate == null ? svdate = new Date(srvTime()) : svdate.setSeconds(svdate.getSeconds() + 5)
}

function getTime15s() {
    svdate == null && (svdate = new Date(srvTime()));
    var t = "",
        n = svdate;
    return t += n.getUTCFullYear() + "", t += n.getUTCMonth() < 9 ? "0" + (n.getUTCMonth() + 1) + "" : n.getUTCMonth() + 1 + "", t += n.getUTCDate() <= 9 ? "0" + n.getUTCDate() + "" : n.getUTCDate() + "", t += n.getUTCHours() <= 9 ? "0" + n.getUTCHours() + "" : n.getUTCHours() + "", t += n.getUTCMinutes() <= 9 ? "0" + n.getUTCMinutes() + "" : n.getUTCMinutes() + "", t + (Math.floor(n.getUTCSeconds() / 15) + "")
}

function orderTN(n, t) {
    var i, e = [],
        r, o, s, f, u;
    try {
        r = ["14,13,15", "16,10,17", "19,11,18", "21,20,22", "23,24,25", "14,26,27,28", "30,29,31"];
        3 == t && (r = ["32,33", "34,35", "37,36", "38,40,39", "42,41", "37,43,44", "32,45,36"]);
        o = new Date;
        s = o.getDay();
        switch (s) {
            case 1:
                i = r[0].split(",");
                break;
            case 2:
                i = r[1].split(",");
                break;
            case 3:
                i = r[2].split(",");
                break;
            case 4:
                i = r[3].split(",");
                break;
            case 5:
                i = r[4].split(",");
                break;
            case 6:
                i = r[5].split(",");
                break;
            case 0:
                i = r[6].split(",")
        }
        for (f = 0; f < i.length; f++)
            for (u = 0; u < n.length; u++)
                if (n[u].LotteryId == i[f]) {
                    e.push(n[u]);
                    break
                }
    } catch (h) {
        console.log(h)
    }
    return e
}

function getTNHTMLV2(n) {
    var s, p, v, l, w, r, y, f, h, u, d, o, e, g, a, t, nt;
    if (typeof n != "undefined" && n != null && !(n.length <= 0)) {
        n = orderTN(n, group);
        s = "";
        p = "";
        newResult = !1;
        resultupdating = !0;
        try {
            for (var i = (80 / n.length, n[0]), c = 0, b = 0, k = 0, t = 0; t < n.length; t++) v = n[t], 1 == parseInt(v.Status) ? c++ : 0 == parseInt(v.Status) ? (b++, isLive = !0) : 2 == parseInt(v.Status) && k++, 0 == parseInt(v.Status) ? ((intervalVariable == null || typeof intervalVariable == "undefined") && (intervalVariable = setInterval("getRandomTextTN()", 100)), log && console.log("intervalVariable", intervalVariable)) : intervalVariable != null ? (log && console.log("intervalVariable != null", intervalVariable), c == n.length && (log && console.log("clearInterval intervalVariable", c), finisDisconnect(), window.clearInterval(intervalVariable))) : log && console.log("intervalVariable == null", intervalVariable), c == n.length && finisDisconnect();
            for (s = "", b > 0 ? s += '<span><img src="https://cdn.xoso.com.vn/images/dangchoxoso.gif" alt="xstt"> ' + (2 == group ? "XSMN" : "XSMT") + ' <span style="color:#b01014">Đang quay thưởng<\/span><\/span>' : c == n.length ? s += "<span>" + (2 == group ? "XSMN" : "XSMT") + ' <span style="color:#b01014">Đã quay thưởng xong<\/span><\/span><\/div>' : k == n.length && (s += "<span>" + (2 == group ? "XSMN" : "XSMT") + ' bắt đầu mở thưởng lúc <span style = "color:#b01014">' + i.OpenPrizeTime + "<\/span><\/span>"), group == 2 ? $("#ketquamnlivehead").html().indexOf(s) < 0 && $("#ketquamnlivehead").html(s) : $("#ketquamtlivehead").html().indexOf(s) < 0 && $("#ketquamtlivehead").html(s), l = getLinkDayOfWeekTN(group) + getLinkDayTN(group), group == 2 ? (l = '<a tite="XSMN" href="/xo-so-mien-nam/xsmn-p1.html">XSMN<\/a> ' + l, $("#kqLiveLinkMN").html(l)) : (l = '<a tite="XSMT" href="/xo-so-mien-trung/xsmt-p1.html">XSMT<\/a> ' + l, $("#kqLiveLinkMT").html(l)), t = 0; t < n.length; t++)
                if (i = n[t], "undefined" == typeof document.getElementById(i.LotteryCode + "_prize8_item0") || null == document.getElementById(i.LotteryCode + "_prize8_item0")) {
                    initTNHTMLV3(n);
                    log && console.log("initTNHTMLV3");
                    break
                }
            for (w = '<img class="icon-long-quay" src="https://cdn.xoso.com.vn/images/long-quay.gif" alt="truc tiep">', t = 0; t < n.length; t++)
                for (i = n[t], TNcurentPrice[t] = "#" + i.LotteryCode + "_prize8_item0", TNcurentPriceIndex[t] = 2, r = 0; r < i.LotPrizes.length; r++)
                    for (y = i.LotPrizes[r].Prize.toLowerCase(), f = "", f = y.indexOf("db") >= 0 || y.indexOf("đb") >= 0 || y.indexOf("đặc biệt") >= 0 ? "_Db" : "" + (8 - r), h = i.LotPrizes[r].Range.indexOf("-") >= 0 ? i.LotPrizes[r].Range.split("-") : i.LotPrizes[r].Range.split(" "), u = 0; u < h.length; u++) $("#" + i.LotteryCode + "_prize" + f + "_item" + u).html() != h[u].trim() || "..." == h[u].trim() ? h[u].indexOf("...") < 0 ? (d = $("#" + i.LotteryCode + "_prize" + f + "_item" + u).html().indexOf("ketquamoi") + 0, (d >= 0 || 1 == i.Status ? $("#" + i.LotteryCode + "_prize" + f + "_item" + u).html(h[u].trim()) : ($("#" + i.LotteryCode + "_prize" + f + "_item" + u).html("<span class='ketquamoi'>" + h[u].trim() + "<\/span>"), newResult = !0), u == h.length - 1) ? (o = 7 - r, TNcurentPrice[t] = "#" + i.LotteryCode + "_prize" + o + "_item0", 0 == o && (TNcurentPrice[t] = "#" + i.LotteryCode + "_prize_Db_item0"), 0 == r ? TNcurentPriceIndex[t] = 3 : 1 == r || 2 == r ? TNcurentPriceIndex[t] = 4 : r >= 3 && 6 >= r ? TNcurentPriceIndex[t] = 5 : r >= 7 && (TNcurentPriceIndex[t] = 6, i.OpenPrizeTime.indexOf("17h15") >= 0 && (TNcurentPriceIndex[t] = 5))) : (o = u + 1, TNcurentPrice[t] = "#" + i.LotteryCode + "_prize" + f + "_item" + o, 8 == o && (TNcurentPrice[t] = "#" + i.LotteryCode + "_prize_Db_item0"), "_Db" == f ? (TNcurentPriceIndex[t] = 6, i.OpenPrizeTime.indexOf("17h15") >= 0 && (TNcurentPriceIndex[t] = 5)) : 0 == r ? TNcurentPriceIndex[t] = 2 : 1 == r ? TNcurentPriceIndex[t] = 3 : 2 == r || 3 == r ? TNcurentPriceIndex[t] = 4 : r >= 4 && 7 >= r && (TNcurentPriceIndex[t] = 5))) : (p = "#" + i.LotteryCode + "_prize" + f + "_item" + u, $("#" + i.LotteryCode + "_prize" + f + "_item" + u).html().indexOf("runloto") < 0 && $("#" + i.LotteryCode + "_prize" + f + "_item" + u).html().indexOf(w) < 0 && $("#" + i.LotteryCode + "_prize" + f + "_item" + u).html(w)) : h[u].indexOf("...") < 0 && (u == h.length - 1 ? (o = 7 - r, TNcurentPrice[t] = "#" + i.LotteryCode + "_prize" + o + "_item0", 0 == o && (TNcurentPrice[t] = "#" + i.LotteryCode + "_prize_Db_item0"), 0 == r ? TNcurentPriceIndex[t] = 3 : 1 == r || 2 == r ? TNcurentPriceIndex[t] = 4 : r >= 3 && 6 >= r ? TNcurentPriceIndex[t] = 5 : r >= 7 && (TNcurentPriceIndex[t] = 6)) : (o = u + 1, TNcurentPrice[t] = "#" + i.LotteryCode + "_prize" + f + "_item" + o, 8 == o && (TNcurentPrice[t] = "#" + i.LotteryCode + "_prize_Db_item0"), "_Db" == f ? TNcurentPriceIndex[t] = 6 : 0 == r ? TNcurentPriceIndex[t] = 2 : 1 == r ? TNcurentPriceIndex[t] = 3 : 2 == r || 3 == r ? TNcurentPriceIndex[t] = 4 : r >= 4 && 7 >= r && (TNcurentPriceIndex[t] = 5)));
            for (e = "", g = "col3", 4 == n.length && (g = "col4 mn"), e += "<thead>", e += "\t<tr>", e += '\t\t<th class="loto-name">Đầu<\/th>', t = 0; t < n.length; t++) i = n[t], e += '\t<th class="loto-col' + n.length + '"><a title="' + i.LotteryName + '" href="' + getLotteryLink(i.LotteryId, i.LotteryCode, i.LotteryName) + '">' + i.LotteryName + "<\/a><\/th>";
            for (e += "\t<\/tr>", e += "<\/thead>", e += "<tbody>", a = 0; 10 > a; a++) {
                for (e += a % 2 == 0 ? "        <tr>" : "        <tr>", e += "\t\t<th>" + a.toString() + "<\/th>", t = 0; t < n.length; t++) i = n[t], e += "\t<td>" + i.Lotos[a].Tail + "<\/td>";
                e += "\t<\/tr>"
            }
            e += "<\/tbody>";
            nt = "bangkqloto_" + (2 == group ? "mn" : "mt");
            $("#" + nt).html(e);
            c == n.length && interval && window.clearInterval(interval);
            c == n.length && intervalVariable && window.clearInterval(intervalVariable);
            newResult && newPrizeSound()
        } catch (tt) {
            resultupdating = !1;
            console.log(tt, p)
        }
        return resultupdating = !1, s
    }
}

function initTNHTMLV3() {
    var n = new Date,
        t = n.getDate(),
        i = n.getMonth() + 1,
        f = n.getFullYear(),
        e = (2 == group ? "mn" : "mt") + "_kqngay_" + (10 > t ? "0" + t : "" + t) + (10 > i ? "0" + i : "" + i) + f + "_kq",
        r = "",
        u = "/Xsmt/MTTrucTiepAjax";
    group == 2 && (u = "/Xsmn/MNTrucTiepAjax");
    $.ajax({
        url: u,
        type: "GET",
        "async": !1,
        success: function(n) {
            if (n.length) return $("#" + e).html(n), r = n, refreshHighlightLoto(), log && console.log("initTNHTMLV3 success"), r;
            log && console.log("empty html live")
        }
    })
}

function initMBHTMLV2() {
    var n = new Date,
        t = n.getDate(),
        i = n.getMonth() + 1,
        u = n.getFullYear(),
        f = "kqngay_" + (10 > t ? "0" + t : "" + t) + (10 > i ? "0" + i : "" + i) + u + "_kq",
        r = "";
    $.ajax({
        url: "/Xsmb/MBTrucTiepAjax",
        type: "GET",
        "async": !1,
        success: function(n) {
            if (n.length) return $("#" + f).html(n), r = n, log && console.log("initTNHTMLV3 success"), r;
            console.log("empty html live")
        }
    })
}

function initProvince() {
    var n;
    if (log && console.log("initProvince"), n = "", lotId > 0) {
        var t = new Date,
            i = t.getDate(),
            r = t.getMonth() + 1,
            u = t.getFullYear(),
            f = "kqngay_" + (10 > i ? "0" + i : "" + i) + (10 > r ? "0" + r : "" + r) + u;
        $.ajax({
            url: "/KQDai/GetHTMLLiveAjax",
            "async": !1,
            data: {
                LotteryId: lotId
            },
            type: "GET",
            success: function(t) {
                t.length ? ($("#" + f).html(t), n = t) : console.log("empty html live")
            }
        }).always(function() {})
    }
    return n
}

function getLotteryLink(n, t, i) {
    return webPath + "xo-so-" + locdau(i) + "/xs" + t.toLowerCase() + "-p1.html"
}

function getLotteryByDateLink(n, t, i, r) {
    return webPath + "xs" + t.toLowerCase() + "-" + r.split(",")[1].replace(/\//g, "-").replace(" ", "") + ".html"
}

function locdau(n) {
    return n = n.toLowerCase(), n = n.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a"), n = n.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, "e"), n = n.replace(/ì|í|ị|ỉ|ĩ/g, "i"), n = n.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, "o"), n = n.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u"), n = n.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y"), n = n.replace(/đ/g, "d"), n = n.replace(/!|@|\$|%|\^|\*|\(|\)|\+|\=|\<|\>|\?|\/|,|\.|\:|\'| |\"|\&|\#|\[|\]|~/g, "-"), n = n.replace(/-+-/g, "-"), n = n.replace(/^\-+|\-+$/g, "")
}

function LiveProvinceV2(n, t, i, r) {
    var u;
    if (is_first_nodejs || "undefined" != typeof connected && "undefined" != typeof e_live_err_flag && connected && !e_live_err_flag) return is_first_nodejs = !1, console.log("elive is running..."), void(lottery_json.length > 1 && getProvinceHTMLV2(lottery_json));
    group = n;
    lotteryId = t;
    headingTag = r;
    var o = new Date,
        e = o.getHours(),
        f = o.getMinutes();
    if (isFN) {
        log && console.log("myconn isFinisDisconnect", isFN);
        return
    }
    if (typeof isResultLive != "undefined" && !isResultLive && f > 40) {
        log && console.log("result complete", isResultLive, f);
        finisDisconnect();
        return
    }
    if ((4 == e || 16 == e) && f >= 14 && 50 >= f && 2 == n || (5 == e || 17 == e) && f >= 14 && 50 >= f && 3 == n) try {
        isNoteJs(root) ? (u = root + group + "/" + getTime15s(), console.log("live link: " + u), $.ajax({
            type: "GET",
            url: u,
            timeout: 5e3,
            success: function(n, t, i) {
                var h, r, f;
                if ((null == n || JSON.stringify(n).length <= 50) && rootList.indexOf(";") >= 0) return console.log("data from " + u + ": Empty"), void(root = rootList.split(";")[1]);
                if (h = new Date(i.getResponseHeader("last-modified")), r = (svdate - h) / 1e3, r > 60 || r < -60) {
                    svdate = srvTime();
                    console.log("difsec: ", r);
                    return
                }
                var e = new Date,
                    o = e.getDate(),
                    s = e.getMonth() + 1,
                    l = e.getFullYear(),
                    a = "kqngay_" + (10 > o ? "0" + o : "" + o) + (10 > s ? "0" + s : "" + s) + l,
                    c = document.getElementById(a);
                c && (f = getProvinceHTMLV2(n), $("#kqLiveTitle").html(f), f && f.length > 0 && (c.style.display = "block"))
            },
            error: function() {
                console.log("data from " + u + ": Error");
                rootList.indexOf(";") >= 0 && (root = rootList.split(";")[1])
            }
        })) : (u = root + "lottery_ws/LotteryWCFService.svc/GetLotteryMsgLiveByGroup/" + n + ",1,21,1,4," + i + ",1", console.log("live link: " + u), $.ajax({
            type: "GET",
            url: u,
            data: "",
            dataType: "text",
            timeout: 5e3,
            beforeSend: LiveProvinceBegin,
            success: LiveProvinceSuccessV2,
            error: LiveProvinceError
        }))
    } catch (s) {
        console.log(s)
    }
}

function LiveProvinceBegin() {}

function LiveProvinceError() {
    console.log("data from " + root + ": Error");
    rootList.indexOf(";") >= 0 && (root = rootList.split(";")[0])
}

function LiveProvinceSuccessV2(n) {
    var t;
    try {
        if (null == n || n.length <= 50) return console.log("data from " + root + ": Empty"), void(rootList.indexOf(";") >= 0 && (root = rootList.split(";")[0]));
        var e = JSON.parse(n),
            i = new Date,
            r = i.getDate(),
            u = i.getMonth() + 1,
            o = i.getFullYear(),
            s = "kqngay_" + (10 > r ? "0" + r : "" + r) + (10 > u ? "0" + u : "" + u) + o,
            f = document.getElementById(s);
        f && (t = getProvinceHTMLV2(e), $("#kqLiveTitle").html(t), t && t.length > 0 && (f.style.display = "block"));
        rootList.indexOf(";") >= 0 && (root = rootList.split(";")[0])
    } catch (h) {
        console.log(h)
    }
}

function getProvinceHTMLV2(n) {
    var h, t, l, a, i, c, f, e, u, w, o, r, s;
    if (typeof n != "undefined" && n != null && !(n.length <= 0)) {
        if (h = "", newResult = !1, resultupdating = !0, "undefined" != typeof document.getElementById("xsdai_prize8_item0") && $("#xsdai_prize8_item0").length) try {
            for (i = 0; i < n.length; i++)
                if (n[i].LotteryId == lotteryId) {
                    t = n[i];
                    break
                }
            if (!t || !t.LotteryId || t.LotteryId <= 0) return interval && window.clearInterval(interval), void console.log("obj null");
            for (1 == parseInt(t.Status) ? (h += "XS" + t.LotteryCode + '<span title="XS' + t.LotteryCode + " " + t.CrDateTime + '" style="color: #b01014;"> Đã quay thưởng xong<\/span>', isLive = !1) : (isLive = !1, 2 == parseInt(t.Status) ? h += "<span>XS" + t.LotteryCode + ' bắt đầu mở thưởng lúc <span style = "color:#b01014">' + t.OpenPrizeTime + "<\/span><\/span>" : (h += '<span><img src="https://cdn.xoso.com.vn/images/dangchoxoso.gif" alt="xstt"/> Xổ số ' + t.LotteryName + ' <span style = "color:#b01014">Đang quay thưởng<\/span><\/span>', isLive = !0)), TNcurentPrice[0] = "#xsdai_prize8_item0", TNcurentPriceIndex[0] = 2, $("#linkDaiTheoNgay").length > 0 && (l = (new Date).getDay(), a = "Chủ Nhật", l != 0 && (a = "Thứ " + (l + 1)), $("#linkDaiTheoNgay").html('<h3><a title="XS' + t.LotteryCode + '" href="' + getLotteryLink(t.LotteryId, t.LotteryCode, t.LotteryName) + '">XS' + t.LotteryCode + "<\/a> " + a + ' / <a title="XS' + t.LotteryCode + " " + t.CrDateTime + '" href="' + getLotteryByDateLink(t.LotteryId, t.LotteryCode, t.LotteryName, t.CrDateTime) + '">XS' + t.LotteryCode + " " + t.CrDateTime + "<\/a><\/h3>")), i = 0; i < t.LotPrizes.length; i++)
                for (c = t.LotPrizes[i].Prize.toLowerCase(), f = "", f = c.indexOf("db") >= 0 || c.indexOf("đb") >= 0 || c.indexOf("đặc biệt") >= 0 ? "db" : "" + (t.LotPrizes.length - i - 1), e = t.LotPrizes[i].Range.split(" - "), u = 0; u < e.length; u++) $("#xsdai_prize" + f + "_item" + u).html() != e[u].trim() || "..." == e[u].trim() ? e[u].indexOf("...") < 0 ? (w = $("#xsdai_prize" + f + "_item" + u).html().indexOf("ketquamoi") + 0, (w >= 0 || 1 == t.Status ? $("#xsdai_prize" + f + "_item" + u).html(e[u].trim()) : ($("#xsdai_prize" + f + "_item" + u).html("<span class='ketquamoi'>" + e[u].trim() + "<\/span>"), newResult = !0), u == e.length - 1) ? (o = 7 - i, TNcurentPrice[0] = "#xsdai_prize" + o + "_item0", 0 == o && (TNcurentPrice[0] = "#xsdai_prizedb_item0"), 0 == i ? TNcurentPriceIndex[0] = 3 : 1 == i || 2 == i ? TNcurentPriceIndex[0] = 4 : i > 3 && 6 >= i ? TNcurentPriceIndex[0] = 5 : i >= 7 && (TNcurentPriceIndex[0] = t.OpenPrizeTime.indexOf("16h") >= 0 ? 6 : 5)) : (o = u + 1, TNcurentPrice[0] = "#xsdai_prize" + f + "_item" + o, "db" == f ? TNcurentPriceIndex[0] = t.OpenPrizeTime.indexOf("16h") >= 0 ? 6 : 5 : 0 == i ? TNcurentPriceIndex[0] = 2 : 1 == i ? TNcurentPriceIndex[0] = 3 : 2 == i || 3 == i ? TNcurentPriceIndex[0] = 4 : i >= 4 && 7 >= i && (TNcurentPriceIndex[0] = 5))) : $("#xsdai_prize" + f + "_item" + u).html().indexOf("runloto") < 0 && $("#xsdai_prize" + f + "_item" + u).html('<img class="icon-long-quay" src="https://cdn.xoso.com.vn/images/long-quay.gif" alt="truc tiep"/>') : e[u].indexOf("...") < 0 && (u == e.length - 1 ? (o = 7 - i, TNcurentPrice[0] = "#xsdai_prize" + o + "_item0", 0 == o && (TNcurentPrice[0] = "#xsdai_prizedb_item0"), 0 == i ? TNcurentPriceIndex[0] = 3 : 1 == i || 2 == i ? TNcurentPriceIndex[0] = 4 : i >= 3 && 6 >= i ? TNcurentPriceIndex[0] = 5 : i >= 7 && (TNcurentPriceIndex[0] = t.OpenPrizeTime.indexOf("16h") >= 0 ? 6 : 5)) : (o = u + 1, TNcurentPrice[0] = "#xsdai_prize" + f + "_item" + o, "db" == f ? TNcurentPriceIndex[0] = t.OpenPrizeTime.indexOf("16h") >= 0 ? 6 : 5 : 0 == i ? TNcurentPriceIndex[0] = 2 : 1 == i ? TNcurentPriceIndex[0] = 3 : 2 == i || 3 == i ? TNcurentPriceIndex[0] = 4 : i >= 4 && 7 >= i && (TNcurentPriceIndex[0] = 5)));
            for (r = "", r += '<div class="site-link2"><span>Bảng Loto ' + t.LotteryName + "<\/span><\/div>", r += '<table class="table-loto">', r += "    <thead>", r += "        <tr>", r += '            <th class="loto-name">Đầu<\/th>', r += '            <th class="loto-col2">Đuôi<\/th>', r += '            <th class="loto-col2">Đầu<\/th>', r += '            <th class="loto-name">Đuôi<\/th>', r += "        <\/tr>", r += "    <\/thead>", r += "    <tbody>", s = 0; 10 > s; s++) r += s % 2 == 0 ? "        <tr>" : "        <tr>", r += "            <th>" + s.toString() + "<\/th>", r += "            <td>" + t.Lotos[s].Tail + "<\/td>", r += "            <td>" + t.LotoTailTable[s].Head + "<\/td>", r += "            <th>" + s.toString() + "<\/th>", r += "        <\/tr>";
            r += "    <\/tbody>";
            r += "<\/table>";
            var v = new Date,
                y = v.getDate(),
                p = v.getMonth() + 1,
                b = v.getFullYear(),
                k = "kqngay_" + (10 > y ? "0" + y : "" + y) + (10 > p ? "0" + p : "" + p) + b + "_dd";
            $("#" + k).html(r);
            1 == parseInt(t.Status) && interval && window.clearInterval(interval);
            1 == parseInt(t.Status) && intervalVariable && window.clearInterval(intervalVariable);
            newResult && newPrizeSound();
            resultupdating = !1;
            1 == parseInt(t.Status) && finisDisconnect()
        } catch (d) {
            resultupdating = !1;
            console.log(d)
        } else initProvince();
        return h
    }
}

function isNoteJs(n) {
    var t = n.replace("http://", "");
    return t = t.replace("https://", ""), t.indexOf(":") >= 0 || t.indexOf("live.") >= 0 ? !0 : !1
}

function GetFullJsonObject(n) {
    for (var o, h, y, c = [], p = 0, s = 0; s < n.length; s++) {
        for (var t = n[s], i = [{
                Head: "-",
                Tail: "0"
            }, {
                Head: "-",
                Tail: "1"
            }, {
                Head: "-",
                Tail: "2"
            }, {
                Head: "-",
                Tail: "3"
            }, {
                Head: "-",
                Tail: "4"
            }, {
                Head: "-",
                Tail: "5"
            }, {
                Head: "-",
                Tail: "6"
            }, {
                Head: "-",
                Tail: "7"
            }, {
                Head: "-",
                Tail: "8"
            }, {
                Head: "-",
                Tail: "9"
            }], r = [{
                Head: "0",
                Tail: "-"
            }, {
                Head: "1",
                Tail: "-"
            }, {
                Head: "2",
                Tail: "-"
            }, {
                Head: "3",
                Tail: "-"
            }, {
                Head: "4",
                Tail: "-"
            }, {
                Head: "5",
                Tail: "-"
            }, {
                Head: "6",
                Tail: "-"
            }, {
                Head: "7",
                Tail: "-"
            }, {
                Head: "8",
                Tail: "-"
            }, {
                Head: "9",
                Tail: "-"
            }], l = [], u = 0; u < t.Lots.length; u++) {
            var w = {
                    Prize: t.Lots[u].P,
                    Range: t.Lots[u].R
                },
                b = t.Lots[u].R,
                a = b.split("-");
            for (l[u] = w, o = 0; o < a.length; o++)
                if (h = a[o].trim(), "..." != h) {
                    var v = parseInt(h) % 100,
                        f = Math.floor(v / 10),
                        e = v % 10;
                    "-" == i[e].Head && (i[e].Head = "");
                    i[e].Head.length > 0 && (i[e].Head += ",");
                    i[e].Head += "" + f;
                    "-" == r[f].Tail && (r[f].Tail = "");
                    r[f].Tail.length > 0 && (r[f].Tail += ",");
                    r[f].Tail += "" + e
                }
        }
        y = {
            CrDateTime: t.Time,
            LotPrizes: l,
            LotoTailTable: i,
            Lotos: r,
            LotteryCode: t.Code,
            LotteryId: t.Id,
            LotteryName: t.Name,
            OpenPrizeTime: t.OTime,
            SpecialCodes: t.SCodes,
            Status: t.Status
        };
        c[p++] = y
    }
    return c
}

function MQTTLiveXS(n) {
    if (group = n.group_id, typeof fromPageView != "undefined" && fromPageView.toLowerCase() == "kqd" ? MQTTLiveProvince(GetFullJsonObject(n.lottery_data)) : n.group_id == 1 ? MQTTLiveMB(GetFullJsonObject(n.lottery_data)) : n.group_id == 2 ? MQTTLiveMN(GetFullJsonObject(n.lottery_data)) : n.group_id == 3 && MQTTLiveMT(GetFullJsonObject(n.lottery_data)), log && console.log(n), typeof n.cage_err != "undefined") {
        var t = "",
            i = n.cage_err;
        if (i == 0) return;
        i == 1 ? (t = "Đang lỗi lồng cầu. Quý khách vui lòng đợi trong giây lát!", showLiveMsg(t)) : i == 2 && (t = "Hôm nay mở thưởng muộn. Quý khách vui lòng đợi trong giây lát!", showLiveMsg(t))
    }
}

function showLiveMsg(n) {
    $("#liveMessagePannel").html("<div>" + n + "<\/div>");
    $("#liveMessagePannel").show("fast");
    window.setTimeout('$("#liveMessagePannel").hide("slow");', 15e3)
}

function MQTTLiveMB(n) {
    var e;
    lottery_json = n;
    var r = new Date,
        t = r.getDate(),
        i = r.getMonth() + 1,
        u = r.getFullYear(),
        o = "kqngay_" + (10 > t ? "0" + t : "" + t) + (10 > i ? "0" + i : "" + i) + u,
        f = document.getElementById(o),
        s = (10 > t ? "0" + t : "" + t) + "/" + (10 > i ? "0" + i : "" + i) + "/" + u;
    if (lottery_json[0].CrDateTime.indexOf(s) <= 0) {
        log && console.log("Live time invalid ", lottery_json[0].CrDateTime);
        return
    }
    f && (e = getMBHTMLV2(n), $("#kqLiveTitle").html(e), f.style.display = "block")
}

function MQTTLiveMT(n) {
    lottery_json = n;
    var t = new Date,
        i = t.getDate(),
        r = t.getMonth() + 1,
        f = t.getFullYear(),
        e = "mt_kqngay_" + (10 > i ? "0" + i : "" + i) + (10 > r ? "0" + r : "" + r) + f,
        u = document.getElementById(e);
    u && (getTNHTMLV2(n), u.style.display = "block")
}

function MQTTLiveMN(n) {
    var t, f;
    lottery_json = n;
    var i = new Date,
        r = i.getDate(),
        u = i.getMonth() + 1,
        o = i.getFullYear(),
        s = "mn_kqngay_" + (10 > r ? "0" + r : "" + r) + (10 > u ? "0" + u : "" + u) + o,
        e = document.getElementById(s);
    if (e) {
        for (t = 0; t < n.length; t++) f = n[t], ("undefined" == typeof document.getElementById(f.LotteryCode + "_prize8_item0") || null == document.getElementById(f.LotteryCode + "_prize8_item0")) && (initTNHTMLV3(n), log && console.log("MQTTLiveMN initTNHTMLV3"));
        getTNHTMLV2(n);
        e.style.display = "block"
    }
}

function MQTTLiveProvince(n) {
    var t;
    lottery_json = n;
    var i = new Date,
        r = i.getDate(),
        u = i.getMonth() + 1,
        e = i.getFullYear(),
        o = "kqngay_" + (10 > r ? "0" + r : "" + r) + (10 > u ? "0" + u : "" + u) + e,
        f = document.getElementById(o);
    f && (lotteryId = lotId, t = getProvinceHTMLV2(n), $("#kqLiveTitle").html(t), t && t.length > 0 && (f.style.display = "block"))
}

function myJSONParse(n) {
    var h, c, w, l, b, k, a, v, y, tt, it;
    if (n.indexOf(" ") < 0 && (n = crps.as.decr(n).toString(crps.en.ut)), n.indexOf("{") >= 0) return JSON.parse(n);
    var p = [],
        rt = 0,
        s = n.split("!");
    if (!(s.length < 2) && (h = s[0].split("|"), 2 == h.length)) {
        var ut = parseInt(h[0]),
            u = parseInt(h[1]),
            i = new Date,
            ft = u <= 1 ? "18h15" : 2 == u ? "16h15" : "17h15",
            f = "";
        for (f = 0 == i.getDay() ? "Chủ nhật, " : "Thứ " + (i.getDay() + 1) + ", ", f += (i.getDate() < 10 ? "0" : "") + i.getDate() + "/", f += (i.getMonth() + 1 < 10 ? "0" : "") + (i.getMonth() + 1) + "/", f += i.getFullYear(), c = 1; c < s.length; c++) {
            if (a = "", v = s[c].split("@"), 2 != v.length) return;
            var et = v[0],
                ot = v[1],
                e = et.split("|");
            if (4 != e.length) return;
            w = e[0];
            l = parseInt(e[1]);
            b = e[2];
            k = e[3];
            for (var d = ot.split("|"), g = [], o = 0; o < d.length; o++) {
                var t = getPrizeLabel(u, l, o),
                    r = getFullPrize(u, l, t, d[o]),
                    nt = r.split("-");
                for (r = "", y = 0; y < nt.length; y++) r.length > 0 && (r += " - "), r += nt[y];
                "SC" != t && "sc" != t ? ("1" != t && "2" != t && "2" != t && "3" != t && "4" != t && "5" != t && "6" != t && "7" != t && "8" != t || (t = "G." + t), tt = {
                    P: t,
                    R: r
                }, g[o] = tt) : "..." == (a = r) && (a = "")
            }
            it = {
                Code: b,
                Id: l,
                Lots: g,
                Name: k,
                OTime: ft,
                SCodes: a,
                Status: w,
                Time: f
            };
            p[rt++] = it
        }
        return {
            cage_err: ut,
            group_id: u,
            lottery_data: p
        }
    }
}

function getFullPrize(n, t, i, r) {
    var u, e, f;
    if (void 0 === r || null == r || r.length <= 0) r = "...";
    else if (r.indexOf("...") >= 0) return r;
    if ("SC" == i || "sc" == i) return r;
    for (u = 1, n <= 1 ? "2" == i ? u = 2 : "3" == i ? u = 6 : "4" == i ? u = 4 : "5" == i ? u = 6 : "6" == i ? u = 3 : "7" == i && (u = 4) : "6" == i ? u = 3 : "4" == i ? u = 7 : "3" == i && (u = 2), e = r.split("-"), r = "", f = 0; f < u; f++) r.length > 0 && (r += "-"), r += f < e.length ? e[f] : "...";
    return r
}

function getPrizeLabel(n, t, i) {
    return n <= 1 ? 0 == i ? "ĐB" : 8 == i ? "SC" : "" + i : 9 == i ? "SC" : 8 == i ? "ĐB" : "" + (8 - i)
}

function showLiveLoto() {
    var n, t, u, i;
    if (typeof $ == "undefined" || $ === null) {
        log && console.log("jQuery loading");
        return
    }
    var r = new Date,
        f = r.getHours(),
        e = r.getMinutes();
    if (f != 18) {
        log && console.log("Not live");
        return
    }
    for (n = 0; n < listEventMatch.length; n++)
        if (n > cEventIndex) {
            cEventIndex = n;
            break
        }
    if (log && console.log("showEvent", cEventIndex, listEventMatch.length), cEventIndex >= 0) {
        for (t = "", u = $("#liveLotoPannel").html(), i = 0; i < listEvent.length; i++)
            if (listEvent[i].name == listEventMatch[cEventIndex].name) {
                t = listEvent[i].msg.replace("Num1", listEventMatch[cEventIndex].Num1).replace("Num2", listEventMatch[cEventIndex].Num2);
                break
            }
        t != "" && t != u && ($("#liveLotoPannel").html(t), $("#liveLotoPannel").addClass("evenloto2"), $("#liveLotoPannel").show(), $("#liveLotoNote").show(), setTimeout('$("#liveLotoPannel").removeClass("evenloto2");', 5e3))
    }
}

function showHightlightLoto() {
    var r, i, n, t;
    if (typeof $ == "undefined" || $ === null) {
        log && console.log("jQuery loading");
        return
    }
    var u = new Date,
        f = u.getHours(),
        e = u.getMinutes();
    if (f !== 18) {
        log && console.log("Not live, not empty");
        return
    }
    for (r = "", i = "", listEventMatch.length > 0 && (i = '<p class="bltt"><span class="ic-live"><\/span>Bình luận trực tiếp<\/p>'), n = 0; n < listEventMatch.length; n++) {
        for (r = "", t = 0; t < listEvent.length; t++)
            if (listEvent[t].name == listEventMatch[n].name) {
                r = listEvent[t].name != "NhieuNhay" && isSpecial(listEventMatch[n].Num1) ? listEvent[t].msg.replace("Num1", '<span class="red">' + listEventMatch[n].Num1 + "<\/span>").replace("Num2", listEventMatch[n].Num2) : listEvent[t].msg.replace("Num1", listEventMatch[n].Num1).replace("Num2", listEventMatch[n].Num2);
                break
            }
        i += "<p> - " + r + "<\/p>"
    }
    i.length > 0 && ($("#LotoHightlightPannel").html(i), $("#LotoHightlightPannel").show())
}

function isSpecial(n) {
    var t, r, i, u;
    return lottery_json ? lottery_json.length != 1 ? !1 : (t = lottery_json[0], typeof t.LotteryPrizeRanges != "undefined" && t.LotteryPrizeRanges.length > 0 && typeof t.LotPrizes == "undefined" && t.SpecialResult.length > 3 && (r = t.SpecialResult.substring(t.SpecialResult.length - 2, 2), r == n)) ? !0 : typeof t.LotPrizes != "undefined" && t.LotPrizes.length > 0 && (i = t.LotPrizes[0].Range, i.length > 3 && typeof t.SpecialResult != "undefined" && (u = i.substring(t.SpecialResult.length - 2, 2), u == n)) ? !0 : !1 : !1
}

function getLiveLotoEvent() {
    var n, e, t, c, u, o, s, i, h, f, l, a, r;
    if (typeof lottery_json == "undefined") {
        log && console.log("lottery_json  undefined");
        return
    }
    if (lottery_json.length == 1 || (lottery_json = lottery_jsonC, log && console.log("lottery_json.length", lottery_json.length), lottery_json.length == 1)) {
        if (listEventMatch = [], n = getLotoOrdered(), typeof loRoi == "undefined") {
            log && console.log("loRoi  undefined");
            return
        }
        for (e = [], loRoi = loRoi || {}, loGan = loGan || [], loBong = loBong || {}, VeLienTiep = VeLienTiep || [], CauBachThu = CauBachThu || [], t = 0; t < n.length; t++) {
            for (n[t].Head == loRoi.Head && n[t].Tail.indexOf(loRoi.Tail) >= 0 && (isExistMatchEvent("LoRoi", loRoi.Head + loRoi.Tail) || listEventMatch.push({
                    name: "LoRoi",
                    Num1: loRoi.Head + loRoi.Tail,
                    Num2: ""
                })), c = 0; c < loGan.length; c++) u = loGan[c], n[t].Head == u.Head && n[t].Tail.indexOf(u.Tail) >= 0 && (isExistMatchEvent("LoGan", u.Head + u.Tail) || listEventMatch.push({
                name: "LoGan",
                Num1: u.Head + u.Tail,
                Num2: u.Counter
            }));
            for (o = 1, s = t - 1; s >= 0; s--) n[t].Head == n[s].Head && n[t].Tail == n[s].Tail && o++;
            for (o > 1 && (isExistMatchEvent("NhieuNhay", n[t].Head + n[t].Tail, o) || listEventMatch.push({
                    name: "NhieuNhay",
                    Num1: n[t].Head + n[t].Tail,
                    Num2: o
                })), e = [], i = 0; i < VeLienTiep.length; i++) n[t].Head == VeLienTiep[i].Head && e.push(VeLienTiep[i]);
            for (h = n[t].Tail.split(","), f = 0; f < h.length; f++) {
                for (l = 1, i = 0; i < e.length; i++)
                    if (e[i].Tail.indexOf(h[f]) >= 0) l++;
                    else break;
                l > 1 && (isExistMatchEvent("VeLienTiep", n[t].Head + h[f]) || listEventMatch.push({
                    name: "VeLienTiep",
                    Num1: n[t].Head + h[f],
                    Num2: l
                }))
            }
            for (n[t].Head == loBong.Head && n[t].Tail.indexOf(loBong.Tail) >= 0 && (isExistMatchEvent("Bong", loBong.Head + loBong.Tail) || listEventMatch.push({
                    name: "Bong",
                    Num1: loBong.Head + loBong.Tail,
                    Num2: ""
                })), a = 0; a < CauBachThu.length; a++) r = CauBachThu[a], n[t].Head == r.Head && n[t].Tail.indexOf(r.Tail) >= 0 && (isExistMatchEvent("CauBachThu", r.Head + r.Tail, r.Counter) || listEventMatch.push({
                name: "CauBachThu",
                Num1: r.Head + r.Tail,
                Num2: r.Counter
            }))
        }
    }
}

function getLotoOrdered() {
    var e = [],
        n, u, r, f, i, t;
    if (lottery_json.length == 1) {
        if (n = lottery_json[0], typeof n.LotteryPrizeRanges != "undefined" && n.LotteryPrizeRanges.length > 0 && typeof n.LotPrizes == "undefined") return getLotoOrderedNew(n);
        if (n.LotPrizes.length > 0) {
            for (f = 1; f < n.LotPrizes.length; f++)
                for (i = n.LotPrizes[f].Range.split(" - "), t = 0; t < i.length; t++) r = i[t].substring(i[t].length - 1), u = i[t].substring(i[t].length - 2, i[t].length - 1), r.indexOf(".") < 0 && e.push({
                    Head: u,
                    Tail: r
                });
            r = n.LotPrizes[0].Range.substring(n.LotPrizes[0].Range.length - 1);
            u = n.LotPrizes[0].Range.substring(n.LotPrizes[0].Range.length - 2, n.LotPrizes[0].Range.length - 1);
            r.indexOf(".") < 0 && e.push({
                Head: u,
                Tail: r
            })
        }
        return e
    }
}

function getLotoOrderedNew(n) {
    var e = [],
        u, r, f, i, t;
    if (typeof n != "undefined") {
        if (n.LotteryPrizeRanges.length > 0) {
            for (f = 1; f < n.LotteryPrizeRanges.length; f++)
                for (i = n.LotteryPrizeRanges[f].Ranges, t = 0; t < i.length; t++) r = i[t].substring(i[t].length - 1), u = i[t].substring(i[t].length - 2, i[t].length - 1), r.indexOf(".") < 0 && e.push({
                    Head: u,
                    Tail: r
                });
            r = n.LotteryPrizeRanges[0].RangeRaw.substring(n.LotteryPrizeRanges[0].RangeRaw.length - 1);
            u = n.LotteryPrizeRanges[0].RangeRaw.substring(n.LotteryPrizeRanges[0].RangeRaw.length - 2, n.LotteryPrizeRanges[0].RangeRaw.length - 1);
            r.indexOf(".") < 0 && e.push({
                Head: u,
                Tail: r
            })
        }
        return e
    }
}

function isExistMatchEvent(n, t, i = null) {
    for (var u = !1, r = 0; r < listEventMatch.length; r++)
        if (n == listEventMatch[r].name && listEventMatch[r].Num1 == t && (i == null || listEventMatch[r].Num2 == i)) {
            u = !0;
            break
        }
    return u
}

function updateCountNMS() {
    if (isFN && (window.clearInterval(checkCountNMS), typeof socket != "undefined" && socket != null && socket.readyState == WebSocket.OPEN && socket.send("0")), typeof socket != "undefined" && socket != null && socket.readyState == WebSocket.OPEN && (countNMS++, countNDT++, countNMS > maxNMS && (console.log("countNMS max"), finisSocket(), $.ajax({
            type: "GET",
            url: "https://log.xoso.com.vn/maxnms"
        }), window.clearInterval(checkCountNMS)), countNMS > maxNMSFirst && isfmr && (console.log("retry socket", retry), countNMS = 0, retrySocket(), $.ajax({
            type: "GET",
            url: "https://log.xoso.com.vn/retrysocket" + retry.toString()
        })), countNDT > maxNDT)) {
        var t = new Date,
            n = t.getUTCMinutes();
        n >= 16 && n <= 28 && (console.log("maxNDT max"), countNDT = 0, $.ajax({
            type: "GET",
            url: "https://log.xoso.com.vn/maxndt"
        }))
    }
}
var socket = null,
    livewklink = "wss://livexs.xoso.com.vn/",
    isUsingWk = !0,
    isfmr = !0,
    maxretry = 3,
    retry = 0,
    retryonerror = 0,
    xmlHttp, listEventMatch, listEvent, checkCountNMS;
"undefined" == typeof Paho && (Paho = {});
Paho.MQTT = function(n) {
    function g(n, t) {
        var y = t,
            p = n[t],
            w = p >> 4,
            o = p &= 15,
            s, h, c, e, i, b, a, v, d, r;
        t += 1;
        h = 0;
        c = 1;
        do {
            if (t == n.length) return [null, y];
            s = n[t++];
            h += (127 & s) * c;
            c *= 128
        } while (0 != (128 & s));
        if (e = t + h, e > n.length) return [null, y];
        i = new f(w);
        switch (w) {
            case u.CONNACK:
                b = n[t++];
                1 & b && (i.sessionPresent = !0);
                i.returnCode = n[t++];
                break;
            case u.PUBLISH:
                a = o >> 1 & 3;
                v = l(n, t);
                t += 2;
                d = k(n, t, v);
                t += v;
                a > 0 && (i.messageIdentifier = l(n, t), t += 2);
                r = new Paho.MQTT.Message(n.subarray(t, e));
                1 == (1 & o) && (r.retained = !0);
                8 == (8 & o) && (r.duplicate = !0);
                r.qos = a;
                r.destinationName = d;
                i.payloadMessage = r;
                break;
            case u.PUBACK:
            case u.PUBREC:
            case u.PUBREL:
            case u.PUBCOMP:
            case u.UNSUBACK:
                i.messageIdentifier = l(n, t);
                break;
            case u.SUBACK:
                i.messageIdentifier = l(n, t);
                t += 2;
                i.returnCode = n.subarray(t, e)
        }
        return [i, e]
    }

    function c(n, t, i) {
        return t[i++] = n >> 8, t[i++] = n % 256, i
    }

    function o(n, t, i, r) {
        return r = c(t, i, r), b(n, i, r), r + t
    }

    function l(n, t) {
        return 256 * n[t] + n[t + 1]
    }

    function nt(n) {
        var i = new Array(1),
            r = 0,
            t;
        do t = n % 128, n >>= 7, n > 0 && (t |= 128), i[r++] = t; while (n > 0 && 4 > r);
        return i
    }

    function e(n) {
        for (var r, t = 0, i = 0; i < n.length; i++) r = n.charCodeAt(i), r > 2047 ? (r >= 55296 && 56319 >= r && (i++, t++), t += 3) : r > 127 ? t += 2 : t++;
        return t
    }

    function b(n, r, u) {
        for (var f, s, e = u, o = 0; o < n.length; o++) {
            if (f = n.charCodeAt(o), f >= 55296 && 56319 >= f) {
                if (s = n.charCodeAt(++o), isNaN(s)) throw new Error(i(t.MALFORMED_UNICODE, [f, s]));
                f = (f - 55296 << 10) + (s - 56320) + 65536
            }
            127 >= f ? r[e++] = f : 2047 >= f ? (r[e++] = f >> 6 & 31 | 192, r[e++] = 63 & f | 128) : 65535 >= f ? (r[e++] = f >> 12 & 15 | 224, r[e++] = f >> 6 & 63 | 128, r[e++] = 63 & f | 128) : (r[e++] = f >> 18 & 7 | 240, r[e++] = f >> 12 & 63 | 128, r[e++] = f >> 6 & 63 | 128, r[e++] = 63 & f | 128)
        }
        return r
    }

    function k(n, r, u) {
        for (var e, f, o, s, c, l = "", h = r; r + u > h;) {
            if (f = n[h++], 128 > f) e = f;
            else {
                if (o = n[h++] - 128, 0 > o) throw new Error(i(t.MALFORMED_UTF, [f.toString(16), o.toString(16), ""]));
                if (224 > f) e = 64 * (f - 192) + o;
                else {
                    if (s = n[h++] - 128, 0 > s) throw new Error(i(t.MALFORMED_UTF, [f.toString(16), o.toString(16), s.toString(16)]));
                    if (240 > f) e = 4096 * (f - 224) + 64 * o + s;
                    else {
                        if (c = n[h++] - 128, 0 > c) throw new Error(i(t.MALFORMED_UTF, [f.toString(16), o.toString(16), s.toString(16), c.toString(16)]));
                        if (!(248 > f)) throw new Error(i(t.MALFORMED_UTF, [f.toString(16), o.toString(16), s.toString(16), c.toString(16)]));
                        e = 262144 * (f - 240) + 4096 * o + 64 * s + c
                    }
                }
            }
            e > 65535 && (e -= 65536, l += String.fromCharCode(55296 + (e >> 10)), e = 56320 + (1023 & e));
            l += String.fromCharCode(e)
        }
        return l
    }
    var tt = "@VERSION@",
        u = {
            CONNECT: 1,
            CONNACK: 2,
            PUBLISH: 3,
            PUBACK: 4,
            PUBREC: 5,
            PUBREL: 6,
            PUBCOMP: 7,
            SUBSCRIBE: 8,
            SUBACK: 9,
            UNSUBSCRIBE: 10,
            UNSUBACK: 11,
            PINGREQ: 12,
            PINGRESP: 13,
            DISCONNECT: 14
        },
        a = function(n, r) {
            var f;
            for (var u in n)
                if (n.hasOwnProperty(u)) {
                    if (!r.hasOwnProperty(u)) {
                        f = "Unknown property, " + u + ". Valid properties are:";
                        for (u in r) r.hasOwnProperty(u) && (f = f + " " + u);
                        throw new Error(f);
                    }
                    if (typeof n[u] !== r[u]) throw new Error(i(t.INVALID_TYPE, [typeof n[u], u]));
                }
        },
        h = function(n, t) {
            return function() {
                return n.apply(t, arguments)
            }
        },
        t = {
            OK: {
                code: 0,
                text: "AMQJSC0000I OK."
            },
            CONNECT_TIMEOUT: {
                code: 1,
                text: "AMQJSC0001E Connect timed out."
            },
            SUBSCRIBE_TIMEOUT: {
                code: 2,
                text: "AMQJS0002E Subscribe timed out."
            },
            UNSUBSCRIBE_TIMEOUT: {
                code: 3,
                text: "AMQJS0003E Unsubscribe timed out."
            },
            PING_TIMEOUT: {
                code: 4,
                text: "AMQJS0004E Ping timed out."
            },
            INTERNAL_ERROR: {
                code: 5,
                text: "AMQJS0005E Internal error. Error Message: {0}, Stack trace: {1}"
            },
            CONNACK_RETURNCODE: {
                code: 6,
                text: "AMQJS0006E Bad Connack return code:{0} {1}."
            },
            SOCKET_ERROR: {
                code: 7,
                text: "AMQJS0007E Socket error:{0}."
            },
            SOCKET_CLOSE: {
                code: 8,
                text: "AMQJS0008I Socket closed."
            },
            MALFORMED_UTF: {
                code: 9,
                text: "AMQJS0009E Malformed UTF data:{0} {1} {2}."
            },
            UNSUPPORTED: {
                code: 10,
                text: "AMQJS0010E {0} is not supported by this browser."
            },
            INVALID_STATE: {
                code: 11,
                text: "AMQJS0011E Invalid state {0}."
            },
            INVALID_TYPE: {
                code: 12,
                text: "AMQJS0012E Invalid type {0} for {1}."
            },
            INVALID_ARGUMENT: {
                code: 13,
                text: "AMQJS0013E Invalid argument {0} for {1}."
            },
            UNSUPPORTED_OPERATION: {
                code: 14,
                text: "AMQJS0014E Unsupported operation."
            },
            INVALID_STORED_DATA: {
                code: 15,
                text: "AMQJS0015E Invalid data in local storage key={0} value={1}."
            },
            INVALID_MQTT_MESSAGE_TYPE: {
                code: 16,
                text: "AMQJS0016E Invalid MQTT message type {0}."
            },
            MALFORMED_UNICODE: {
                code: 17,
                text: "AMQJS0017E Malformed Unicode string:{0} {1}."
            }
        },
        it = {
            0: "Connection Accepted",
            1: "Connection Refused: unacceptable protocol version",
            2: "Connection Refused: identifier rejected",
            3: "Connection Refused: server unavailable",
            4: "Connection Refused: bad user name or password",
            5: "Connection Refused: not authorized"
        },
        i = function(n, t) {
            var i = n.text,
                f, u, r, e, o;
            if (t)
                for (r = 0; r < t.length; r++)(f = "{" + r + "}", u = i.indexOf(f), u > 0) && (e = i.substring(0, u), o = i.substring(u + f.length), i = e + t[r] + o);
            return i
        },
        v = [0, 6, 77, 81, 73, 115, 100, 112, 3],
        y = [0, 4, 77, 81, 84, 84, 4],
        f = function(n, t) {
            this.type = n;
            for (var i in t) t.hasOwnProperty(i) && (this[i] = t[i])
        },
        w, s;
    f.prototype.encode = function() {
        var s = (15 & this.type) << 4,
            r = 0,
            a = [],
            p = 0,
            l, f, h, t;
        switch (void 0 != this.messageIdentifier && (r += 2), this.type) {
            case u.CONNECT:
                switch (this.mqttVersion) {
                    case 3:
                        r += v.length + 3;
                        break;
                    case 4:
                        r += y.length + 3
                }(r += e(this.clientId) + 2, void 0 != this.willMessage) && (r += e(this.willMessage.destinationName) + 2, l = this.willMessage.payloadBytes, l instanceof Uint8Array || (l = new Uint8Array(f)), r += l.byteLength + 2);
                void 0 != this.userName && (r += e(this.userName) + 2);
                void 0 != this.password && (r += e(this.password) + 2);
                break;
            case u.SUBSCRIBE:
                for (s |= 2, t = 0; t < this.topics.length; t++) a[t] = e(this.topics[t]), r += a[t] + 2;
                r += this.requestedQos.length;
                break;
            case u.UNSUBSCRIBE:
                for (s |= 2, t = 0; t < this.topics.length; t++) a[t] = e(this.topics[t]), r += a[t] + 2;
                break;
            case u.PUBREL:
                s |= 2;
                break;
            case u.PUBLISH:
                this.payloadMessage.duplicate && (s |= 8);
                s = s |= this.payloadMessage.qos << 1;
                this.payloadMessage.retained && (s |= 1);
                p = e(this.payloadMessage.destinationName);
                r += p + 2;
                f = this.payloadMessage.payloadBytes;
                r += f.byteLength;
                f instanceof ArrayBuffer ? f = new Uint8Array(f) : f instanceof Uint8Array || (f = new Uint8Array(f.buffer))
        }
        var w = nt(r),
            n = w.length + 1,
            b = new ArrayBuffer(r + n),
            i = new Uint8Array(b);
        if (i[0] = s, i.set(w, 1), this.type == u.PUBLISH) n = o(this.payloadMessage.destinationName, p, i, n);
        else if (this.type == u.CONNECT) {
            switch (this.mqttVersion) {
                case 3:
                    i.set(v, n);
                    n += v.length;
                    break;
                case 4:
                    i.set(y, n);
                    n += y.length
            }
            h = 0;
            this.cleanSession && (h = 2);
            void 0 != this.willMessage && (h |= 4, h |= this.willMessage.qos << 3, this.willMessage.retained && (h |= 32));
            void 0 != this.userName && (h |= 128);
            void 0 != this.password && (h |= 64);
            i[n++] = h;
            n = c(this.keepAliveInterval, i, n)
        }
        switch (void 0 != this.messageIdentifier && (n = c(this.messageIdentifier, i, n)), this.type) {
            case u.CONNECT:
                n = o(this.clientId, e(this.clientId), i, n);
                void 0 != this.willMessage && (n = o(this.willMessage.destinationName, e(this.willMessage.destinationName), i, n), n = c(l.byteLength, i, n), i.set(l, n), n += l.byteLength);
                void 0 != this.userName && (n = o(this.userName, e(this.userName), i, n));
                void 0 != this.password && (n = o(this.password, e(this.password), i, n));
                break;
            case u.PUBLISH:
                i.set(f, n);
                break;
            case u.SUBSCRIBE:
                for (t = 0; t < this.topics.length; t++) n = o(this.topics[t], a[t], i, n), i[n++] = this.requestedQos[t];
                break;
            case u.UNSUBSCRIBE:
                for (t = 0; t < this.topics.length; t++) n = o(this.topics[t], a[t], i, n)
        }
        return b
    };
    var d = function(n, r, e) {
            this._client = n;
            this._window = r;
            this._keepAliveInterval = 1e3 * e;
            this.isReset = !1;
            var s = new f(u.PINGREQ).encode(),
                o = function(n) {
                    return function() {
                        return h.apply(n)
                    }
                },
                h = function() {
                    this.isReset ? (this.isReset = !1, this._client._trace("Pinger.doPing", "send PINGREQ"), this._client.socket.send(s), this.timeout = this._window.setTimeout(o(this), this._keepAliveInterval)) : (this._client._trace("Pinger.doPing", "Timed out"), this._client._disconnected(t.PING_TIMEOUT.code, i(t.PING_TIMEOUT)))
                };
            this.reset = function() {
                this.isReset = !0;
                this._window.clearTimeout(this.timeout);
                this._keepAliveInterval > 0 && (this.timeout = setTimeout(o(this), this._keepAliveInterval))
            };
            this.cancel = function() {
                this._window.clearTimeout(this.timeout)
            }
        },
        p = function(n, t, i, r, u) {
            this._window = t;
            i || (i = 30);
            var f = function(n, t, i) {
                return function() {
                    return n.apply(t, i)
                }
            };
            this.timeout = setTimeout(f(r, n, u), 1e3 * i);
            this.cancel = function() {
                this._window.clearTimeout(this.timeout)
            }
        },
        r = function(r, u, f, e, o) {
            if (!("WebSocket" in n && null !== n.WebSocket)) throw new Error(i(t.UNSUPPORTED, ["WebSocket"]));
            if (!("localStorage" in n && null !== n.localStorage)) throw new Error(i(t.UNSUPPORTED, ["localStorage"]));
            if (!("ArrayBuffer" in n && null !== n.ArrayBuffer)) throw new Error(i(t.UNSUPPORTED, ["ArrayBuffer"]));
            this._trace("Paho.MQTT.Client", r, u, f, e, o);
            this.host = u;
            this.port = f;
            this.path = e;
            this.uri = r;
            this.clientId = o;
            this._localKey = u + ":" + f + ("/mqtt" != e ? ":" + e : "") + ":" + o + ":";
            this._msg_queue = [];
            this._sentMessages = {};
            this._receivedMessages = {};
            this._notify_msg_sent = {};
            this._message_identifier = 1;
            this._sequence = 0;
            for (var s in localStorage)(0 == s.indexOf("Sent:" + this._localKey) || 0 == s.indexOf("Received:" + this._localKey)) && this.restore(s)
        };
    return r.prototype.host, r.prototype.port, r.prototype.path, r.prototype.uri, r.prototype.clientId, r.prototype.socket, r.prototype.connected = !1, r.prototype.maxMessageIdentifier = 65536, r.prototype.connectOptions, r.prototype.hostIndex, r.prototype.onConnectionLost, r.prototype.onMessageDelivered, r.prototype.onMessageArrived, r.prototype.traceFunction, r.prototype._msg_queue = null, r.prototype._connectTimeout, r.prototype.sendPinger = null, r.prototype.receivePinger = null, r.prototype.receiveBuffer = null, r.prototype._traceBuffer = null, r.prototype._MAX_TRACE_ENTRIES = 100, r.prototype.connect = function(n) {
        var r = this._traceMask(n, "password");
        if (this._trace("Client.connect", r, this.socket, this.connected), this.connected) throw new Error(i(t.INVALID_STATE, ["already connected"]));
        if (this.socket) throw new Error(i(t.INVALID_STATE, ["already connected"]));
        this.connectOptions = n;
        n.uris ? (this.hostIndex = 0, this._doConnect(n.uris[0])) : this._doConnect(this.uri)
    }, r.prototype.subscribe = function(n, r) {
        if (this._trace("Client.subscribe", n, r), !this.connected) throw new Error(i(t.INVALID_STATE, ["not connected"]));
        var e = new f(u.SUBSCRIBE);
        e.topics = [n];
        e.requestedQos = void 0 != r.qos ? [r.qos] : [0];
        r.onSuccess && (e.onSuccess = function(n) {
            r.onSuccess({
                invocationContext: r.invocationContext,
                grantedQos: n
            })
        });
        r.onFailure && (e.onFailure = function(n) {
            r.onFailure({
                invocationContext: r.invocationContext,
                errorCode: n
            })
        });
        r.timeout && (e.timeOut = new p(this, window, r.timeout, r.onFailure, [{
            invocationContext: r.invocationContext,
            errorCode: t.SUBSCRIBE_TIMEOUT.code,
            errorMessage: i(t.SUBSCRIBE_TIMEOUT)
        }]));
        this._requires_ack(e);
        this._schedule_message(e)
    }, r.prototype.unsubscribe = function(n, r) {
        if (this._trace("Client.unsubscribe", n, r), !this.connected) throw new Error(i(t.INVALID_STATE, ["not connected"]));
        var e = new f(u.UNSUBSCRIBE);
        e.topics = [n];
        r.onSuccess && (e.callback = function() {
            r.onSuccess({
                invocationContext: r.invocationContext
            })
        });
        r.timeout && (e.timeOut = new p(this, window, r.timeout, r.onFailure, [{
            invocationContext: r.invocationContext,
            errorCode: t.UNSUBSCRIBE_TIMEOUT.code,
            errorMessage: i(t.UNSUBSCRIBE_TIMEOUT)
        }]));
        this._requires_ack(e);
        this._schedule_message(e)
    }, r.prototype.send = function(n) {
        if (this._trace("Client.send", n), !this.connected) throw new Error(i(t.INVALID_STATE, ["not connected"]));
        wireMessage = new f(u.PUBLISH);
        wireMessage.payloadMessage = n;
        n.qos > 0 ? this._requires_ack(wireMessage) : this.onMessageDelivered && (this._notify_msg_sent[wireMessage] = this.onMessageDelivered(wireMessage.payloadMessage));
        this._schedule_message(wireMessage)
    }, r.prototype.disconnect = function() {
        if (this._trace("Client.disconnect"), !this.socket) throw new Error(i(t.INVALID_STATE, ["not connecting or connected"]));
        wireMessage = new f(u.DISCONNECT);
        this._notify_msg_sent[wireMessage] = h(this._disconnected, this);
        this._schedule_message(wireMessage)
    }, r.prototype.getTraceLog = function() {
        var n;
        if (null !== this._traceBuffer) {
            this._trace("Client.getTraceLog", new Date);
            this._trace("Client.getTraceLog in flight messages", this._sentMessages.length);
            for (n in this._sentMessages) this._trace("_sentMessages ", n, this._sentMessages[n]);
            for (n in this._receivedMessages) this._trace("_receivedMessages ", n, this._receivedMessages[n]);
            return this._traceBuffer
        }
    }, r.prototype.startTrace = function() {
        null === this._traceBuffer && (this._traceBuffer = []);
        this._trace("Client.startTrace", new Date, tt)
    }, r.prototype.stopTrace = function() {
        delete this._traceBuffer
    }, r.prototype._doConnect = function(n) {
        if (this.connectOptions.useSSL) {
            var r = n.split(":");
            r[0] = "wss";
            n = r.join(":")
        }
        this.connected = !1;
        this.socket = this.connectOptions.mqttVersion < 4 ? new WebSocket(n, ["mqttv3.1"]) : new WebSocket(n, ["mqtt"]);
        this.socket.binaryType = "arraybuffer";
        this.socket.onopen = h(this._on_socket_open, this);
        this.socket.onmessage = h(this._on_socket_message, this);
        this.socket.onerror = h(this._on_socket_error, this);
        this.socket.onclose = h(this._on_socket_close, this);
        this.sendPinger = new d(this, window, this.connectOptions.keepAliveInterval);
        this.receivePinger = new d(this, window, this.connectOptions.keepAliveInterval);
        this._connectTimeout = new p(this, window, this.connectOptions.timeout, this._disconnected, [t.CONNECT_TIMEOUT.code, i(t.CONNECT_TIMEOUT)])
    }, r.prototype._schedule_message = function(n) {
        this._msg_queue.push(n);
        this.connected && this._process_queue()
    }, r.prototype.store = function(n, r) {
        var f = {
            type: r.type,
            messageIdentifier: r.messageIdentifier,
            version: 1
        };
        switch (r.type) {
            case u.PUBLISH:
                r.pubRecReceived && (f.pubRecReceived = !0);
                f.payloadMessage = {};
                for (var o = "", s = r.payloadMessage.payloadBytes, e = 0; e < s.length; e++) s[e] <= 15 ? o = o + "0" + s[e].toString(16) : o += s[e].toString(16);
                f.payloadMessage.payloadHex = o;
                f.payloadMessage.qos = r.payloadMessage.qos;
                f.payloadMessage.destinationName = r.payloadMessage.destinationName;
                r.payloadMessage.duplicate && (f.payloadMessage.duplicate = !0);
                r.payloadMessage.retained && (f.payloadMessage.retained = !0);
                0 == n.indexOf("Sent:") && (void 0 === r.sequence && (r.sequence = ++this._sequence), f.sequence = r.sequence);
                break;
            default:
                throw Error(i(t.INVALID_STORED_DATA, [key, f]));
        }
        localStorage.setItem(n + this._localKey + r.messageIdentifier, JSON.stringify(f))
    }, r.prototype.restore = function(n) {
        var h = localStorage.getItem(n),
            r = JSON.parse(h),
            e = new f(r.type, r),
            l, s;
        switch (r.type) {
            case u.PUBLISH:
                for (var o = r.payloadMessage.payloadHex, a = new ArrayBuffer(o.length / 2), c = new Uint8Array(a), v = 0; o.length >= 2;) l = parseInt(o.substring(0, 2), 16), o = o.substring(2, o.length), c[v++] = l;
                s = new Paho.MQTT.Message(c);
                s.qos = r.payloadMessage.qos;
                s.destinationName = r.payloadMessage.destinationName;
                r.payloadMessage.duplicate && (s.duplicate = !0);
                r.payloadMessage.retained && (s.retained = !0);
                e.payloadMessage = s;
                break;
            default:
                throw Error(i(t.INVALID_STORED_DATA, [n, h]));
        }
        0 == n.indexOf("Sent:" + this._localKey) ? (e.payloadMessage.duplicate = !0, this._sentMessages[e.messageIdentifier] = e) : 0 == n.indexOf("Received:" + this._localKey) && (this._receivedMessages[e.messageIdentifier] = e)
    }, r.prototype._process_queue = function() {
        for (var n = null, t = this._msg_queue.reverse(); n = t.pop();) this._socket_send(n), this._notify_msg_sent[n] && (this._notify_msg_sent[n](), delete this._notify_msg_sent[n])
    }, r.prototype._requires_ack = function(n) {
        var t = Object.keys(this._sentMessages).length;
        if (t > this.maxMessageIdentifier) throw Error("Too many messages:" + t);
        for (; void 0 !== this._sentMessages[this._message_identifier];) this._message_identifier++;
        n.messageIdentifier = this._message_identifier;
        this._sentMessages[n.messageIdentifier] = n;
        n.type === u.PUBLISH && this.store("Sent:", n);
        this._message_identifier === this.maxMessageIdentifier && (this._message_identifier = 1)
    }, r.prototype._on_socket_open = function() {
        var n = new f(u.CONNECT, this.connectOptions);
        n.clientId = this.clientId;
        this._socket_send(n)
    }, r.prototype._on_socket_message = function(n) {
        this._trace("Client._on_socket_message", n.data);
        for (var i = this._deframeMessages(n.data), t = 0; t < i.length; t += 1) this._handleMessage(i[t])
    }, r.prototype._deframeMessages = function(n) {
        var r = new Uint8Array(n),
            f, u, e, o, s;
        this.receiveBuffer && (f = new Uint8Array(this.receiveBuffer.length + r.length), f.set(this.receiveBuffer), f.set(r, this.receiveBuffer.length), r = f, delete this.receiveBuffer);
        try {
            for (u = 0, e = []; u < r.length;) {
                if (o = g(r, u), s = o[0], u = o[1], null === s) break;
                e.push(s)
            }
            u < r.length && (this.receiveBuffer = r.subarray(u))
        } catch (h) {
            return void this._disconnected(t.INTERNAL_ERROR.code, i(t.INTERNAL_ERROR, [h.message, h.stack.toString()]))
        }
        return e
    }, r.prototype._handleMessage = function(n) {
        var s, o, c, h, e, a, r;
        this._trace("Client._handleMessage", n);
        try {
            switch (n.type) {
                case u.CONNACK:
                    if (this._connectTimeout.cancel(), this.connectOptions.cleanSession) {
                        for (s in this._sentMessages) r = this._sentMessages[s], localStorage.removeItem("Sent:" + this._localKey + r.messageIdentifier);
                        this._sentMessages = {};
                        for (s in this._receivedMessages) e = this._receivedMessages[s], localStorage.removeItem("Received:" + this._localKey + e.messageIdentifier);
                        this._receivedMessages = {}
                    }
                    if (0 !== n.returnCode) {
                        this._disconnected(t.CONNACK_RETURNCODE.code, i(t.CONNACK_RETURNCODE, [n.returnCode, it[n.returnCode]]));
                        break
                    }
                    this.connected = !0;
                    this.connectOptions.uris && (this.hostIndex = this.connectOptions.uris.length);
                    o = [];
                    for (c in this._sentMessages) this._sentMessages.hasOwnProperty(c) && o.push(this._sentMessages[c]);
                    for (var o = o.sort(function(n, t) {
                            return n.sequence - t.sequence
                        }), l = 0, y = o.length; y > l; l++) r = o[l], r.type == u.PUBLISH && r.pubRecReceived ? (h = new f(u.PUBREL, {
                        messageIdentifier: r.messageIdentifier
                    }), this._schedule_message(h)) : this._schedule_message(r);
                    this.connectOptions.onSuccess && this.connectOptions.onSuccess({
                        invocationContext: this.connectOptions.invocationContext
                    });
                    this._process_queue();
                    break;
                case u.PUBLISH:
                    this._receivePublish(n);
                    break;
                case u.PUBACK:
                    r = this._sentMessages[n.messageIdentifier];
                    r && (delete this._sentMessages[n.messageIdentifier], localStorage.removeItem("Sent:" + this._localKey + n.messageIdentifier), this.onMessageDelivered && this.onMessageDelivered(r.payloadMessage));
                    break;
                case u.PUBREC:
                    r = this._sentMessages[n.messageIdentifier];
                    r && (r.pubRecReceived = !0, h = new f(u.PUBREL, {
                        messageIdentifier: n.messageIdentifier
                    }), this.store("Sent:", r), this._schedule_message(h));
                    break;
                case u.PUBREL:
                    e = this._receivedMessages[n.messageIdentifier];
                    localStorage.removeItem("Received:" + this._localKey + n.messageIdentifier);
                    e && (this._receiveMessage(e), delete this._receivedMessages[n.messageIdentifier]);
                    a = new f(u.PUBCOMP, {
                        messageIdentifier: n.messageIdentifier
                    });
                    this._schedule_message(a);
                    break;
                case u.PUBCOMP:
                    r = this._sentMessages[n.messageIdentifier];
                    delete this._sentMessages[n.messageIdentifier];
                    localStorage.removeItem("Sent:" + this._localKey + n.messageIdentifier);
                    this.onMessageDelivered && this.onMessageDelivered(r.payloadMessage);
                    break;
                case u.SUBACK:
                    r = this._sentMessages[n.messageIdentifier];
                    r && (r.timeOut && r.timeOut.cancel(), 128 === n.returnCode[0] ? r.onFailure && r.onFailure(n.returnCode) : r.onSuccess && r.onSuccess(n.returnCode), delete this._sentMessages[n.messageIdentifier]);
                    break;
                case u.UNSUBACK:
                    r = this._sentMessages[n.messageIdentifier];
                    r && (r.timeOut && r.timeOut.cancel(), r.callback && r.callback(), delete this._sentMessages[n.messageIdentifier]);
                    break;
                case u.PINGRESP:
                    this.sendPinger.reset();
                    break;
                case u.DISCONNECT:
                    this._disconnected(t.INVALID_MQTT_MESSAGE_TYPE.code, i(t.INVALID_MQTT_MESSAGE_TYPE, [n.type]));
                    break;
                default:
                    this._disconnected(t.INVALID_MQTT_MESSAGE_TYPE.code, i(t.INVALID_MQTT_MESSAGE_TYPE, [n.type]))
            }
        } catch (v) {
            return void this._disconnected(t.INTERNAL_ERROR.code, i(t.INTERNAL_ERROR, [v.message, v.stack.toString()]))
        }
    }, r.prototype._on_socket_error = function(n) {
        this._disconnected(t.SOCKET_ERROR.code, i(t.SOCKET_ERROR, [n.data]))
    }, r.prototype._on_socket_close = function() {
        this._disconnected(t.SOCKET_CLOSE.code, i(t.SOCKET_CLOSE))
    }, r.prototype._socket_send = function(n) {
        if (1 == n.type) {
            var t = this._traceMask(n, "password");
            this._trace("Client._socket_send", t)
        } else this._trace("Client._socket_send", n);
        this.socket.send(n.encode());
        this.sendPinger.reset()
    }, r.prototype._receivePublish = function(n) {
        var t, i;
        switch (n.payloadMessage.qos) {
            case "undefined":
            case 0:
                this._receiveMessage(n);
                break;
            case 1:
                t = new f(u.PUBACK, {
                    messageIdentifier: n.messageIdentifier
                });
                this._schedule_message(t);
                this._receiveMessage(n);
                break;
            case 2:
                this._receivedMessages[n.messageIdentifier] = n;
                this.store("Received:", n);
                i = new f(u.PUBREC, {
                    messageIdentifier: n.messageIdentifier
                });
                this._schedule_message(i);
                break;
            default:
                throw Error("Invaild qos=" + wireMmessage.payloadMessage.qos);
        }
    }, r.prototype._receiveMessage = function(n) {
        this.onMessageArrived && this.onMessageArrived(n.payloadMessage)
    }, r.prototype._disconnected = function(n, r) {
        this._trace("Client._disconnected", n, r);
        this.sendPinger.cancel();
        this.receivePinger.cancel();
        this._connectTimeout && this._connectTimeout.cancel();
        this._msg_queue = [];
        this._notify_msg_sent = {};
        this.socket && (this.socket.onopen = null, this.socket.onmessage = null, this.socket.onerror = null, this.socket.onclose = null, 1 === this.socket.readyState && this.socket.close(), delete this.socket);
        this.connectOptions.uris && this.hostIndex < this.connectOptions.uris.length - 1 ? (this.hostIndex++, this._doConnect(this.connectOptions.uris[this.hostIndex])) : (void 0 === n && (n = t.OK.code, r = i(t.OK)), this.connected ? (this.connected = !1, this.onConnectionLost && this.onConnectionLost({
            errorCode: n,
            errorMessage: r
        })) : 4 === this.connectOptions.mqttVersion && this.connectOptions.mqttVersionExplicit === !1 ? (this._trace("Failed to connect V4, dropping back to V3"), this.connectOptions.mqttVersion = 3, this.connectOptions.uris ? (this.hostIndex = 0, this._doConnect(this.connectOptions.uris[0])) : this._doConnect(this.uri)) : this.connectOptions.onFailure && this.connectOptions.onFailure({
            invocationContext: this.connectOptions.invocationContext,
            errorCode: n,
            errorMessage: r
        }))
    }, r.prototype._trace = function() {
        var t, n, i;
        if (this.traceFunction) {
            for (n in arguments) "undefined" != typeof arguments[n] && (arguments[n] = JSON.stringify(arguments[n]));
            t = Array.prototype.slice.call(arguments).join("");
            this.traceFunction({
                severity: "Debug",
                message: t
            })
        }
        if (null !== this._traceBuffer)
            for (n = 0, i = arguments.length; i > n; n++) this._traceBuffer.length == this._MAX_TRACE_ENTRIES && this._traceBuffer.shift(), 0 === n ? this._traceBuffer.push(arguments[n]) : "undefined" == typeof arguments[n] ? this._traceBuffer.push(arguments[n]) : this._traceBuffer.push("  " + JSON.stringify(arguments[n]))
    }, r.prototype._traceMask = function(n, t) {
        var r = {};
        for (var i in n) n.hasOwnProperty(i) && (r[i] = i == t ? "******" : n[i]);
        return r
    }, w = function(n, u, f, e) {
        var h, c, p, v, l, y, o;
        if ("string" != typeof n) throw new Error(i(t.INVALID_TYPE, [typeof n, "host"]));
        if (2 == arguments.length) {
            if (e = u, h = n, c = h.match(/^(wss?):\/\/((\[(.+)\])|([^\/]+?))(:(\d+))?(\/.*)$/), !c) throw new Error(i(t.INVALID_ARGUMENT, [n, "host"]));
            n = c[4] || c[2];
            u = parseInt(c[7]);
            f = c[8]
        } else {
            if (3 == arguments.length && (e = f, f = "/mqtt"), "number" != typeof u || 0 > u) throw new Error(i(t.INVALID_TYPE, [typeof u, "port"]));
            if ("string" != typeof f) throw new Error(i(t.INVALID_TYPE, [typeof f, "path"]));
            p = -1 != n.indexOf(":") && "[" != n.slice(0, 1) && "]" != n.slice(-1);
            h = "ws://" + (p ? "[" + n + "]" : n) + ":" + u + f
        }
        for (v = 0, l = 0; l < e.length; l++) y = e.charCodeAt(l), y >= 55296 && 56319 >= y && l++, v++;
        if ("string" != typeof e || v > 65535) throw new Error(i(t.INVALID_ARGUMENT, [e, "clientId"]));
        o = new r(h, n, u, f, e);
        this._getHost = function() {
            return n
        };
        this._setHost = function() {
            throw new Error(i(t.UNSUPPORTED_OPERATION));
        };
        this._getPort = function() {
            return u
        };
        this._setPort = function() {
            throw new Error(i(t.UNSUPPORTED_OPERATION));
        };
        this._getPath = function() {
            return f
        };
        this._setPath = function() {
            throw new Error(i(t.UNSUPPORTED_OPERATION));
        };
        this._getURI = function() {
            return h
        };
        this._setURI = function() {
            throw new Error(i(t.UNSUPPORTED_OPERATION));
        };
        this._getClientId = function() {
            return o.clientId
        };
        this._setClientId = function() {
            throw new Error(i(t.UNSUPPORTED_OPERATION));
        };
        this._getOnConnectionLost = function() {
            return o.onConnectionLost
        };
        this._setOnConnectionLost = function(n) {
            if ("function" != typeof n) throw new Error(i(t.INVALID_TYPE, [typeof n, "onConnectionLost"]));
            o.onConnectionLost = n
        };
        this._getOnMessageDelivered = function() {
            return o.onMessageDelivered
        };
        this._setOnMessageDelivered = function(n) {
            if ("function" != typeof n) throw new Error(i(t.INVALID_TYPE, [typeof n, "onMessageDelivered"]));
            o.onMessageDelivered = n
        };
        this._getOnMessageArrived = function() {
            return o.onMessageArrived
        };
        this._setOnMessageArrived = function(n) {
            if ("function" != typeof n) throw new Error(i(t.INVALID_TYPE, [typeof n, "onMessageArrived"]));
            o.onMessageArrived = n
        };
        this._getTrace = function() {
            return o.traceFunction
        };
        this._setTrace = function(n) {
            if ("function" != typeof n) throw new Error(i(t.INVALID_TYPE, [typeof n, "onTrace"]));
            o.traceFunction = n
        };
        this.connect = function(n) {
            var u, r;
            if (n = n || {}, a(n, {
                    timeout: "number",
                    userName: "string",
                    password: "string",
                    willMessage: "object",
                    keepAliveInterval: "number",
                    cleanSession: "boolean",
                    useSSL: "boolean",
                    invocationContext: "object",
                    onSuccess: "function",
                    onFailure: "function",
                    hosts: "object",
                    ports: "object",
                    mqttVersion: "number",
                    mqttVersionExplicit: "boolean",
                    uris: "object"
                }), void 0 === n.keepAliveInterval && (n.keepAliveInterval = 60), n.mqttVersion > 4 || n.mqttVersion < 3) throw new Error(i(t.INVALID_ARGUMENT, [n.mqttVersion, "connectOptions.mqttVersion"]));
            if (void 0 === n.mqttVersion ? (n.mqttVersionExplicit = !1, n.mqttVersion = 4) : n.mqttVersionExplicit = !0, void 0 !== n.password && void 0 === n.userName) throw new Error(i(t.INVALID_ARGUMENT, [n.password, "connectOptions.password"]));
            if (n.willMessage) {
                if (!(n.willMessage instanceof s)) throw new Error(i(t.INVALID_TYPE, [n.willMessage, "connectOptions.willMessage"]));
                if (n.willMessage.stringPayload, "undefined" == typeof n.willMessage.destinationName) throw new Error(i(t.INVALID_TYPE, [typeof n.willMessage.destinationName, "connectOptions.willMessage.destinationName"]));
            }
            if ("undefined" == typeof n.cleanSession && (n.cleanSession = !0), n.hosts) {
                if (!(n.hosts instanceof Array)) throw new Error(i(t.INVALID_ARGUMENT, [n.hosts, "connectOptions.hosts"]));
                if (n.hosts.length < 1) throw new Error(i(t.INVALID_ARGUMENT, [n.hosts, "connectOptions.hosts"]));
                for (u = !1, r = 0; r < n.hosts.length; r++) {
                    if ("string" != typeof n.hosts[r]) throw new Error(i(t.INVALID_TYPE, [typeof n.hosts[r], "connectOptions.hosts[" + r + "]"]));
                    if (/^(wss?):\/\/((\[(.+)\])|([^\/]+?))(:(\d+))?(\/.*)$/.test(n.hosts[r])) {
                        if (0 == r) u = !0;
                        else if (!u) throw new Error(i(t.INVALID_ARGUMENT, [n.hosts[r], "connectOptions.hosts[" + r + "]"]));
                    } else if (u) throw new Error(i(t.INVALID_ARGUMENT, [n.hosts[r], "connectOptions.hosts[" + r + "]"]));
                }
                if (u) n.uris = n.hosts;
                else {
                    if (!n.ports) throw new Error(i(t.INVALID_ARGUMENT, [n.ports, "connectOptions.ports"]));
                    if (!(n.ports instanceof Array)) throw new Error(i(t.INVALID_ARGUMENT, [n.ports, "connectOptions.ports"]));
                    if (n.hosts.length != n.ports.length) throw new Error(i(t.INVALID_ARGUMENT, [n.ports, "connectOptions.ports"]));
                    for (n.uris = [], r = 0; r < n.hosts.length; r++) {
                        if ("number" != typeof n.ports[r] || n.ports[r] < 0) throw new Error(i(t.INVALID_TYPE, [typeof n.ports[r], "connectOptions.ports[" + r + "]"]));
                        var e = n.hosts[r],
                            c = n.ports[r],
                            l = -1 != e.indexOf(":");
                        h = "ws://" + (l ? "[" + e + "]" : e) + ":" + c + f;
                        n.uris.push(h)
                    }
                }
            }
            o.connect(n)
        };
        this.subscribe = function(n, r) {
            if ("string" != typeof n) throw new Error("Invalid argument:" + n);
            if (r = r || {}, a(r, {
                    qos: "number",
                    invocationContext: "object",
                    onSuccess: "function",
                    onFailure: "function",
                    timeout: "number"
                }), r.timeout && !r.onFailure) throw new Error("subscribeOptions.timeout specified with no onFailure callback.");
            if ("undefined" != typeof r.qos && 0 !== r.qos && 1 !== r.qos && 2 !== r.qos) throw new Error(i(t.INVALID_ARGUMENT, [r.qos, "subscribeOptions.qos"]));
            o.subscribe(n, r)
        };
        this.unsubscribe = function(n, t) {
            if ("string" != typeof n) throw new Error("Invalid argument:" + n);
            if (t = t || {}, a(t, {
                    invocationContext: "object",
                    onSuccess: "function",
                    onFailure: "function",
                    timeout: "number"
                }), t.timeout && !t.onFailure) throw new Error("unsubscribeOptions.timeout specified with no onFailure callback.");
            o.unsubscribe(n, t)
        };
        this.send = function(n, r, u, f) {
            var e;
            if (0 == arguments.length) throw new Error("Invalid argument.length");
            if (1 == arguments.length) {
                if (!(n instanceof s) && "string" != typeof n) throw new Error("Invalid argument:" + typeof n);
                if (e = n, "undefined" == typeof e.destinationName) throw new Error(i(t.INVALID_ARGUMENT, [e.destinationName, "Message.destinationName"]));
                o.send(e)
            } else e = new s(r), e.destinationName = n, arguments.length >= 3 && (e.qos = u), arguments.length >= 4 && (e.retained = f), o.send(e)
        };
        this.disconnect = function() {
            o.disconnect()
        };
        this.getTraceLog = function() {
            return o.getTraceLog()
        };
        this.startTrace = function() {
            o.startTrace()
        };
        this.stopTrace = function() {
            o.stopTrace()
        };
        this.isConnected = function() {
            return o.connected
        }
    }, w.prototype = {
        get host() {
            return this._getHost()
        },
        set host(n) {
            this._setHost(n)
        },
        get port() {
            return this._getPort()
        },
        set port(n) {
            this._setPort(n)
        },
        get path() {
            return this._getPath()
        },
        set path(n) {
            this._setPath(n)
        },
        get clientId() {
            return this._getClientId()
        },
        set clientId(n) {
            this._setClientId(n)
        },
        get onConnectionLost() {
            return this._getOnConnectionLost()
        },
        set onConnectionLost(n) {
            this._setOnConnectionLost(n)
        },
        get onMessageDelivered() {
            return this._getOnMessageDelivered()
        },
        set onMessageDelivered(n) {
            this._setOnMessageDelivered(n)
        },
        get onMessageArrived() {
            return this._getOnMessageArrived()
        },
        set onMessageArrived(n) {
            this._setOnMessageArrived(n)
        },
        get trace() {
            return this._getTrace()
        },
        set trace(n) {
            this._setTrace(n)
        }
    }, s = function(n) {
        var r, u, f, o, s;
        if (!("string" == typeof n || n instanceof ArrayBuffer || n instanceof Int8Array || n instanceof Uint8Array || n instanceof Int16Array || n instanceof Uint16Array || n instanceof Int32Array || n instanceof Uint32Array || n instanceof Float32Array || n instanceof Float64Array)) throw i(t.INVALID_ARGUMENT, [n, "newPayload"]);
        r = n;
        this._getPayloadString = function() {
            return "string" == typeof r ? r : k(r, 0, r.length)
        };
        this._getPayloadBytes = function() {
            if ("string" == typeof r) {
                var t = new ArrayBuffer(e(r)),
                    n = new Uint8Array(t);
                return b(r, n, 0), n
            }
            return r
        };
        u = void 0;
        this._getDestinationName = function() {
            return u
        };
        this._setDestinationName = function(n) {
            if ("string" != typeof n) throw new Error(i(t.INVALID_ARGUMENT, [n, "newDestinationName"]));
            u = n
        };
        f = 0;
        this._getQos = function() {
            return f
        };
        this._setQos = function(n) {
            if (0 !== n && 1 !== n && 2 !== n) throw new Error("Invalid argument:" + n);
            f = n
        };
        o = !1;
        this._getRetained = function() {
            return o
        };
        this._setRetained = function(n) {
            if ("boolean" != typeof n) throw new Error(i(t.INVALID_ARGUMENT, [n, "newRetained"]));
            o = n
        };
        s = !1;
        this._getDuplicate = function() {
            return s
        };
        this._setDuplicate = function(n) {
            s = n
        }
    }, s.prototype = {
        get payloadString() {
            return this._getPayloadString()
        },
        get payloadBytes() {
            return this._getPayloadBytes()
        },
        get destinationName() {
            return this._getDestinationName()
        },
        set destinationName(n) {
            this._setDestinationName(n)
        },
        get qos() {
            return this._getQos()
        },
        set qos(n) {
            this._setQos(n)
        },
        get retained() {
            return this._getRetained()
        },
        set retained(n) {
            this._setRetained(n)
        },
        get duplicate() {
            return this._getDuplicate()
        },
        set duplicate(n) {
            this._setDuplicate(n)
        }
    }, {
        Client: w,
        Message: s
    }
}(window);
client = null;
log = !1;
connected = !1;
connecting = !1;
timerconnect = null;
subscribeMessageId = [];
mFeeds_realtime = null;
lasttime_receive = null;
e_live_err_flag = !1;
navigator.sayswho = function() {
    var t, i = navigator.userAgent,
        n = i.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
    return /trident/i.test(n[1]) ? (t = /\brv[ :]+(\d+)/g.exec(i) || [], "IE " + (t[1] || "")) : "Chrome" === n[1] && (t = i.match(/\b(OPR|Edge)\/(\d+)/), null != t) ? t.slice(1).join(" ").replace("OPR", "Opera") : (n = n[2] ? [n[1], n[2]] : [navigator.appName, navigator.appVersion, "-?"], null != (t = i.match(/version\/(\d+)/i)) && n.splice(1, 1, t[1]), n.join(""))
}();
"WebSocket" in window && 2 === window.WebSocket.CLOSING && (myconn(), timerconnect = setInterval(function() {
    myconn()
}, 5e3));
setInterval("updatesvdate()", 5e3);
listEventMatch = [];
listEvent = [{
    name: "LoRoi",
    msg: "Num1: Lô rơi"
}, {
    name: "LoGan",
    msg: "Num1: Gan Num2 ngày đã về"
}, {
    name: "NhieuNhay",
    msg: "Num1: Về Num2 nháy"
}, {
    name: "CauBachThu",
    msg: "Num1: Cầu Bạch thủ đã về (độ dài Num2 ngày)"
}, {
    name: "Bong",
    msg: "Num1: Bóng giải đặc biệt hôm trước"
}, {
    name: "VeLienTiep",
    msg: "Num1: Về liên tiếp Num2 ngày"
}];
checkCountNMS = setInterval("updateCountNMS()", 1e3);
window.addEventListener("beforeunload", finisDisconnect, !1);
var isfinisSocket = isfinisSocket || !1,
    countNDT = 0,
    countNMS = 0,
    maxNMS = 50,
    maxNMSFirst = 3,
    maxNDT = 60,
    isFN = !1,
    cEventIndex = -1,
    wssFailCount = 0,
    webPath = "https://xoso.com.vn/",
    statusLive = 2,
    headingTag = "h2",
    group = 0,
    lotteryId = 0,
    curentPrice = 0,
    curentPriceIndex = 0,
    curentCount = 0,
    curentCountDB = 0,
    intervalVariable, startDB = !1,
    newResult = !1,
    resultupdating = !1,
    isLive = !1,
    TNcurentPrice = [0],
    TNcurentPriceIndex = [0],
    RandomNumber = [0],
    sucLiveUrlIndex = 0,
    start_time, request_time, warringTime = 1e3,
    l_root, lottery_json = [],
    svdate = null,
    is_first_nodejs = !0;